/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.camangi.netconnect;

public final class R {
    public static final class array {
        public static final int ConnectType=0x7f050000;
        /**  Display settings.  The type of animations to show. 
         */
        public static final int animations_entries=0x7f050003;
        /**  Display settings.  Summary for each type of animation. 
         */
        public static final int animations_summaries=0x7f050004;
        /**  Do not translate. 
         */
        public static final int animations_values=0x7f050005;
        /**  Authentication Types used in APN editor 
         */
        public static final int apn_auth_entries=0x7f05001d;
        public static final int apn_auth_values=0x7f05001e;
        /**  Match with constants in BatteryHistory class 
         */
        public static final int battery_history_type_spinner=0x7f050014;
        /**  Match with constants in BatteryStats class 
         */
        public static final int battery_history_which_spinner=0x7f050015;
        /**  There is a setting to control the format of dates displayed throughout the system.  This is in the Date & Time Settings screen.  These will be adjusted to use punctuation appropriate to the user's locale. 
         */
        public static final int date_format_values=0x7f050002;
        /**  Sound settings for emergency tone. 
         */
        public static final int emergency_tone_entries=0x7f050019;
        /**  Do not translate. 
         */
        public static final int emergency_tone_values=0x7f05001a;
        /**  Display settings.  The delay in inactivity before the screen is turned off. These are shown ain a list dialog. 
         */
        public static final int screen_timeout_entries=0x7f050006;
        /**  Do not translate. 
         */
        public static final int screen_timeout_values=0x7f050007;
        /**  Locales in this list are displayed with the corresponding
         name from special_locale_names instead of using the name
         from Locale.getDisplayName(). 
         */
        public static final int special_locale_codes=0x7f05001b;
        public static final int special_locale_names=0x7f05001c;
        /**  The time zone picker screen has two levels.  The first level allows the user to choose a region. 
         */
        public static final int timezone_filters=0x7f050001;
        /**  Do not translate. 
         */
        public static final int tts_demo_strings=0x7f05000e;
        /**  Default language choices 
         */
        public static final int tts_lang_entries=0x7f05000c;
        /**  Do not translate. 
         */
        public static final int tts_lang_values=0x7f05000d;
        /**  Default pitch choices 
         */
        public static final int tts_pitch_entries=0x7f05000a;
        /**  Do not translate. 
         */
        public static final int tts_pitch_values=0x7f05000b;
        /**  TTS settings 
 Default speech rate choices 
         */
        public static final int tts_rate_entries=0x7f050008;
        /**  Do not translate. 
         */
        public static final int tts_rate_values=0x7f050009;
        /**  Display options for UsageStats class 
         */
        public static final int usage_stats_display_order_types=0x7f050016;
        /**  EAP method 
         */
        public static final int wifi_eap_entries=0x7f050017;
        /**  Phase 2 options 
         */
        public static final int wifi_phase2_entries=0x7f050018;
        /**  Wi-Fi settings.  The type of security a Wi-Fi network has.  The user can choose this when he adds a manual network, or configures an existing network. 
         */
        public static final int wifi_security_entries=0x7f05000f;
        /**  Wi-Fi settings.  The type of security a Wi-Fi network has.  The user can choose this when he adds a manual network, or configures an existing network. 
         */
        public static final int wifi_security_without_auto_entries=0x7f050010;
        /**  Wi-Fi settings. Presented as a list dialog to the user to choose the Wi-Fi sleep policy. 
         */
        public static final int wifi_sleep_policy_entries=0x7f050012;
        /**  Do not translate. 
         */
        public static final int wifi_sleep_policy_values=0x7f050013;
        /**  Wi-Fi settings.  Presented as a list dialog to the user.  He chooses the type of WEP key he entered. 
         */
        public static final int wifi_wep_type=0x7f050011;
    }
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int icon=0x7f010001;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int state_encrypted=0x7f010000;
    }
    public static final class drawable {
        public static final int ic_menu_scan_network=0x7f020000;
        public static final int ic_wifi_lock_signal_1=0x7f020001;
        public static final int ic_wifi_lock_signal_2=0x7f020002;
        public static final int ic_wifi_lock_signal_3=0x7f020003;
        public static final int ic_wifi_lock_signal_4=0x7f020004;
        public static final int ic_wifi_signal_1=0x7f020005;
        public static final int ic_wifi_signal_2=0x7f020006;
        public static final int ic_wifi_signal_3=0x7f020007;
        public static final int ic_wifi_signal_4=0x7f020008;
        public static final int icon=0x7f020009;
        public static final int wifi_signal=0x7f02000a;
        public static final int wifi_signal_lock=0x7f02000b;
        public static final int wifi_signal_open=0x7f02000c;
    }
    public static final class id {
        public static final int anonymous_identity_edit=0x7f070014;
        public static final int anonymous_identity_text=0x7f070013;
        public static final int ca_certificate_spinner=0x7f07000e;
        public static final int ca_certificate_text=0x7f07000d;
        public static final int client_certificate_spinner=0x7f070010;
        public static final int client_certificate_text=0x7f07000f;
        public static final int eap_spinner=0x7f07000a;
        public static final int eap_text=0x7f070009;
        public static final int enterprise_wrapper=0x7f070008;
        public static final int identity_edit=0x7f070012;
        public static final int identity_text=0x7f070011;
        public static final int name=0x7f070019;
        public static final int password_edit=0x7f070016;
        public static final int password_text=0x7f070015;
        public static final int phase2_spinner=0x7f07000c;
        public static final int phase2_text=0x7f07000b;
        public static final int scanning_progress=0x7f070000;
        public static final int scanning_text=0x7f070001;
        public static final int security_spinner=0x7f070007;
        public static final int security_text=0x7f070006;
        public static final int show_password_checkbox=0x7f070017;
        public static final int signal=0x7f070002;
        public static final int ssid_edit=0x7f070005;
        public static final int ssid_text=0x7f070004;
        public static final int table=0x7f070003;
        public static final int value=0x7f07001a;
        public static final int wep_type_spinner=0x7f070018;
    }
    public static final class layout {
        public static final int main=0x7f030000;
        public static final int preference_progress_category=0x7f030001;
        public static final int preference_widget_wifi_signal=0x7f030002;
        public static final int wifi_ap_configure=0x7f030003;
        public static final int wifi_ap_info=0x7f030004;
        public static final int wifi_ap_info_row=0x7f030005;
        public static final int wifi_ap_retry_password=0x7f030006;
    }
    public static final class string {
        /**  Main settings screen, setting title for the user to go into the About phone screen 
         */
        public static final int about_settings=0x7f060247;
        /**  Main settings screen, setting summary for the user to go into the About phone screen
         */
        public static final int about_settings_summary=0x7f060248;
        /**  Sound & display settings screen, accelerometer-based rotation summary text when check box is clear 
         */
        public static final int accelerometer_summary_off=0x7f0601bb;
        /**  Sound & display settings screen, accelerometer-based rotation summary text when check box is selected 
         */
        public static final int accelerometer_summary_on=0x7f0601ba;
        /**  Sound & display settings screen, accelerometer-based rotation check box label 
         */
        public static final int accelerometer_title=0x7f0601b9;
        /**  Warning about disabling accessibility displayed as a dialog message when the user
         selects to disable accessibility. This avoids accidental disabling. 
         */
        public static final int accessibility_service_disable_warning=0x7f060321;
        /**  Warning message about security implications of enabling an accessibility service,
         displayed as a dialog message when the user selects to enable an accessibility service. 
         */
        public static final int accessibility_service_security_warning=0x7f060320;
        /**  Setting accessibility services category 
         */
        public static final int accessibility_services_category=0x7f06031e;
        /**  Settings title in main settings screen for accessibility settings 
         */
        public static final int accessibility_settings=0x7f06031a;
        /**  Settings summary for accessibility settings 
         */
        public static final int accessibility_settings_summary=0x7f06031c;
        /**  Settings title for accessibility settings screen 
         */
        public static final int accessibility_settings_title=0x7f06031b;
        /**  The title of the dialog to pick an activity.  This is shown when there are multiple activities that can do a particular action.  For example, suppose you click on the "Share" menu item in the Browser.  Since you can share the webpage URL via many communication methods, this dialog would come up with choices like "Email", "IM", etc.  This is a generic message, and the previous example is a single possible scenario (so please don't assume it's for the browser or anything :) ). 
         */
        public static final int activity_picker_label=0x7f0600bd;
        /**  Warning text to user about the implications of enabling USB debugging 
         */
        public static final int adb_warning_message=0x7f0602f3;
        /**  Title of warning dialog about the implications of enabling USB debugging 
         */
        public static final int adb_warning_title=0x7f0602f2;
        /**  Agree 
         */
        public static final int agree=0x7f060245;
        /**  Wireless controls settings screen, setting check box label 
         */
        public static final int airplane_mode=0x7f0600c9;
        /**  Wireless controls settings screen, setting option summary text 
         */
        public static final int airplane_mode_summary=0x7f0600ca;
        /**  Wireless controls settings screen, setting option summary text as airplane mode is being disabled (so it is re-enabling all the wireless conenctions) 
         */
        public static final int airplane_mode_turning_off=0x7f0600cc;
        /**  Wireless controls settings screen, setting option summary text as airplane mode is being enabled (so it is disabling all wireless connections)  
         */
        public static final int airplane_mode_turning_on=0x7f0600cb;
        /**  Setting Checkbox title whether to allow mock locations 
         */
        public static final int allow_mock_location=0x7f0602f0;
        /**  setting Checkbox summary whether to allow mock locations  
         */
        public static final int allow_mock_location_summary=0x7f0602f1;
        /**  Sound & display settings screen, animations option summary text when check box is clear 
         */
        public static final int animations_summary_off=0x7f0601b8;
        /**  Sound & display settings screen, animations option summary text when check box is selected 
         */
        public static final int animations_summary_on=0x7f0601b7;
        /**  Sound & display settings screen, animations check box label 
         */
        public static final int animations_title=0x7f0601b6;
        /**  Edit access point labels: The actual access point name
         */
        public static final int apn_apn=0x7f060206;
        /**  Edit acces  point labels: Authenticaton type
         */
        public static final int apn_auth_type=0x7f060211;
        /**  Authentication Typs: CHAP 
         */
        public static final int apn_auth_type_chap=0x7f060214;
        /**  Authentication Typs: None 
         */
        public static final int apn_auth_type_none=0x7f060212;
        /**  Authentication Typs: PAP 
         */
        public static final int apn_auth_type_pap=0x7f060213;
        /**  Authentication Typs: PAP or CHAP 
         */
        public static final int apn_auth_type_pap_chap=0x7f060215;
        /**  Screen title after user selects APNs setting option 
         */
        public static final int apn_edit=0x7f060203;
        /**  Edit access point labels: The port number of the proxy to use for this APN 
         */
        public static final int apn_http_port=0x7f060208;
        /**  Edit access point labels: The addess of the proxy to use for this APN 
         */
        public static final int apn_http_proxy=0x7f060207;
        /**  Edit access point labels: 
         */
        public static final int apn_mcc=0x7f06020f;
        /**  Edit access point labels: The port on the proxy used for MMS
         */
        public static final int apn_mms_port=0x7f06020e;
        /**  Edit access point labels: The proxy to use for MMS (multimedia messages)
         */
        public static final int apn_mms_proxy=0x7f06020d;
        /**  Edit access point labels: 
         */
        public static final int apn_mmsc=0x7f06020c;
        /**  Edit access point labels: 
         */
        public static final int apn_mnc=0x7f060210;
        /**  Edit access point labels: A label the user can give to the APN to allow him to differentiate it from the others 
         */
        public static final int apn_name=0x7f060205;
        /**  Edit access point label summary text when no value has been set 
         */
        public static final int apn_not_set=0x7f060204;
        /**  Edit access point labels: The password that will be used when connecting to this APN 
         */
        public static final int apn_password=0x7f06020a;
        /**  Edit access point labels: The server address to conenct to for this APN 
         */
        public static final int apn_server=0x7f06020b;
        /**  APN Settings 
 APN settings screen title 
         */
        public static final int apn_settings=0x7f060202;
        /**  Edit access point labels: The type of APN 
         */
        public static final int apn_type=0x7f060216;
        /**  Edit access point labels: The username that will be used when conencting to this APN
         */
        public static final int apn_user=0x7f060209;
        /**  Manage applications, restore updated system application to factory version 
         */
        public static final int app_factory_reset=0x7f06028e;
        /**  Manage applications, factory reset option dialog text for system applications. 
         */
        public static final int app_factory_reset_dlg_text=0x7f0602a5;
        /**  Manage applications, factory reset dialog title for system applications. 
         */
        public static final int app_factory_reset_dlg_title=0x7f0602a4;
        public static final int app_name=0x7f060001;
        /**  label for application name 
         */
        public static final int app_name_label=0x7f060317;
        /**  Manage applications, individual application dialog box message. Shown when the user somehow got into a state where it wants to manage some app that isn't found. 
         */
        public static final int app_not_found_dlg_text=0x7f0602a2;
        /**  Manage applications, individual application dialog box title. Shown when the user somehow got into a state where it wants to manage some app that isn't found. 
         */
        public static final int app_not_found_dlg_title=0x7f0602a1;
        /**  Manage applications, individual application info screen title. For example, if they click on "Browser" in "Manage applications", the title of the next screen will be this 
         */
        public static final int application_info_label=0x7f060280;
        /**  Manage applications, individual application info screen, label under Storage heading. The amount of space taken up by the application itself (for example, the java compield files and things like that) 
         */
        public static final int application_size_label=0x7f06028a;
        /**  Applications settings title, on main settings screen. If clicked, the user is taken to a settings screen full of application settings
         */
        public static final int applications_settings=0x7f06027a;
        /**  Applications settings screen heading. The header for the Application settings screen. 
         */
        public static final int applications_settings_header=0x7f06027c;
        /**  Applications settings summary, on main settings screen. The summary for the "Applications" item on the main settings screen. Describes what settings are accessible from the "Applications" screen. 
         */
        public static final int applications_settings_summary=0x7f06027b;
        /**  Security & location settings screen, setting check box label if Assisted GPS should be enabled 
         */
        public static final int assisted_gps=0x7f06023f;
        /**  Security & location settings screen, setting summary when Assisted GPS check box is clear 
         */
        public static final int assisted_gps_disabled=0x7f060241;
        /**  Security & location settings screen, setting summary when Assisted GPS check box is selected 
         */
        public static final int assisted_gps_enabled=0x7f060240;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int audio_record_proc_summary=0x7f0601a7;
        /**  Sound settings screen, setting option name checkbox to enable/disable audio recording features that improve audio recording in noisy environments 
         */
        public static final int audio_record_proc_title=0x7f0601a6;
        /**  On Text & language settings screen, setting option name.  title of the setting to enable autocapitalization of entered text.  for example, after the user finishes a sentence, the next letter he types will automatically be capitalizated. 
         */
        public static final int auto_caps=0x7f0602c3;
        /**  On Text & language settings screen, setting summary. Summary for the Auto-cap setting. 
         */
        public static final int auto_caps_summary=0x7f0602c4;
        /**  Manage applications, individual application screen, text under Launch by default heading if the app is NOT a default for actions 
         */
        public static final int auto_launch_disable_text=0x7f060290;
        /**  Manage applications, individual application info screen, screen, message text under Launch by default heading. This is present if the app is set as a default for some actions. 
         */
        public static final int auto_launch_enable_text=0x7f06028f;
        /**  Manage applications, individual application info screen,  heading for settings related to controlling whether this app is the default for some actions 
         */
        public static final int auto_launch_label=0x7f060282;
        /**  On Text & language settings screen, setting option name. title of the setting to enable automatic punctuation of entered text.  for example, it will change an entered "youre" to "you're". 
         */
        public static final int auto_punctuate=0x7f0602c5;
        /**  On Text & language settings screen, setting summary for the Auto-punctuate setting. 
         */
        public static final int auto_punctuate_summary=0x7f0602c7;
        /**  On Text & language settings screen, setting option name. title of the setting to enable autoreplace of entered text. auto replace is a feature that will automatically correct mistyped words. 
         */
        public static final int auto_replace=0x7f0602c1;
        /**  On Text & language settings screen, setting summary.  This is the summary for the "Auto-replace" setting. 
         */
        public static final int auto_replace_summary=0x7f0602c2;
        /**  Sound & display settings screen, setting option name to change whether the screen adjusts automatically based on lighting conditions 
         */
        public static final int automatic_brightness=0x7f0601c0;
        /**  CPU awake time title 
         */
        public static final int awake=0x7f060328;
        /**  Dialog title for confirmation to erase backup data from server 
         */
        public static final int backup_erase_dialog_message=0x7f0603e3;
        /**  Dialog title for confirmation to erase backup data from server 
         */
        public static final int backup_erase_dialog_title=0x7f0603e2;
        /**  Backup settings menu title 
         */
        public static final int backup_settings_title=0x7f0603e1;
        /**  Band mode screen. Status message when unsuccessful. 
         */
        public static final int band_mode_failed=0x7f0600ad;
        /**  Band mode screen.  Loading message. 
         */
        public static final int band_mode_loading=0x7f0600ab;
        /**  Band mode screen. Button caption to set the bandmode. 
         */
        public static final int band_mode_set=0x7f0600ac;
        /**  Band mode screen. Statusm essage when successful. 
         */
        public static final int band_mode_succeeded=0x7f0600ae;
        /**  Band Mode Selection 
 Band mode screen.  Title of activity. 
         */
        public static final int band_mode_title=0x7f0600aa;
        /**  About phone screen,  setting option name
         */
        public static final int baseband_version=0x7f0601db;
        /**  Label for app details action 
         */
        public static final int battery_action_app_details=0x7f060341;
        /**  Label for app settings action 
         */
        public static final int battery_action_app_settings=0x7f060342;
        /**  Label for bluetooth settings 
         */
        public static final int battery_action_bluetooth=0x7f060345;
        /**  Label for display settings 
         */
        public static final int battery_action_display=0x7f060343;
        /**  Label for force stop action 
         */
        public static final int battery_action_stop=0x7f060340;
        /**  Label for wifi settings 
         */
        public static final int battery_action_wifi=0x7f060344;
        /**  Description for power consumed by applications 
         */
        public static final int battery_desc_apps=0x7f060351;
        /**  Description for bluetooth power consumption detail 
         */
        public static final int battery_desc_bluetooth=0x7f06034e;
        /**  Description for power consumed by display 
         */
        public static final int battery_desc_display=0x7f06034a;
        /**  Description for cell radio detail 
         */
        public static final int battery_desc_radio=0x7f060348;
        /**  Description for standby detail 
         */
        public static final int battery_desc_standby=0x7f060347;
        /**  Description for voice call detail 
         */
        public static final int battery_desc_voice=0x7f060346;
        /**  Description for wifi connectivity 
         */
        public static final int battery_desc_wifi=0x7f06034c;
        /**  Used for awake time message in BatteryHistory 
         */
        public static final int battery_history_awake=0x7f06030f;
        /**  Used for label of awake bar in BatteryHistory 
         */
        public static final int battery_history_awake_label=0x7f06030c;
        /**  Used to show the number of bytes received by an app over the network in BatteryHistory 
         */
        public static final int battery_history_bytes_received=0x7f0602f9;
        /**  Used to show the number of bytes sent by an app over the network in BatteryHistory 
         */
        public static final int battery_history_bytes_sent=0x7f0602fa;
        /**  Used to show the number of bytes sent and received by an app over the network in BatteryHistory 
         */
        public static final int battery_history_bytes_total=0x7f0602fb;
        /**  Used as a title for the cpu usage details screen in BatteryHistory 
         */
        public static final int battery_history_cpu_usage=0x7f0602fc;
        /**  Used to show an amount of time in the form "d days, h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_days=0x7f060301;
        /**  Used to display "Details for UID 1234" in BatteryHistory 
         */
        public static final int battery_history_details_for=0x7f0602f6;
        /**  Used to show an amount of time in the form "h hours, m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_hours=0x7f060302;
        /**  The title of the activity to see battery history. 
         */
        public static final int battery_history_label=0x7f0600c1;
        /**  Used to show an amount of time in the form "m minutes, s seconds" in BatteryHistory 
         */
        public static final int battery_history_minutes=0x7f060303;
        /**  Used as a title for the network usage details screen in BatteryHistory 
         */
        public static final int battery_history_network_usage=0x7f0602f8;
        /**  Used when no battery data available in BatteryHistory 
         */
        public static final int battery_history_no_data=0x7f060306;
        /**  Used to head a list of packages that share a given user id BatteryHistory 
         */
        public static final int battery_history_packages_sharing_this_uid=0x7f060305;
        /**  Used for Phone on time message in BatteryHistory 
         */
        public static final int battery_history_phone_on=0x7f060311;
        /**  Used for label of phone on bar in BatteryHistory 
         */
        public static final int battery_history_phone_on_label=0x7f06030e;
        /**  Used for Screen on time message in BatteryHistory 
         */
        public static final int battery_history_screen_on=0x7f060310;
        /**  Used for Screen on time message in BatteryHistory 
         */
        public static final int battery_history_screen_on_battery=0x7f060312;
        /**  Used for label of screen on bar in BatteryHistory 
         */
        public static final int battery_history_screen_on_label=0x7f06030d;
        /**  XXX remove? Used for Screen on time message in BatteryHistory 
         */
        public static final int battery_history_screen_on_plugged=0x7f060313;
        /**  Used to show an amount of time in the form "s seconds" in BatteryHistory 
         */
        public static final int battery_history_seconds=0x7f060304;
        /**  Used for Sensor detail screen in BatteryHistory 
         */
        public static final int battery_history_sensor=0x7f060307;
        /**  Used for Sensor detail screen in BatteryHistory 
         */
        public static final int battery_history_sensor_usage=0x7f06030a;
        /**  Used for Sensor detail screen in BatteryHistory 
         */
        public static final int battery_history_sensor_usage_multi=0x7f06030b;
        /**  Used to show the number of times an app has been started in BatteryHistory 
         */
        public static final int battery_history_starts=0x7f060300;
        /**  Used to show the time spent in system code for a given app in BatteryHistory 
         */
        public static final int battery_history_system_time=0x7f0602fe;
        /**  Used to show the time spent in user or system code for a given app in BatteryHistory 
         */
        public static final int battery_history_total_time=0x7f0602ff;
        /**  Used to name a set of apps that share a user id in BatteryHistory 
         */
        public static final int battery_history_uid=0x7f0602f7;
        /**  Used for Sensor detail screen in BatteryHistory 
         */
        public static final int battery_history_used_by_packages=0x7f060309;
        /**  Used to show the time spent in user code for a given app in BatteryHistory 
         */
        public static final int battery_history_user_time=0x7f0602fd;
        /**  Used for Wakelock detail screen in BatteryHistory 
         */
        public static final int battery_history_wakelock=0x7f060308;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_awake_battery=0x7f06003a;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_awake_plugged=0x7f06003b;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_dead=0x7f06004c;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_good=0x7f06004a;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_label=0x7f060033;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_over_voltage=0x7f06004d;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_overheat=0x7f06004b;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_unknown=0x7f060049;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_health_unspecified_failure=0x7f06004e;
        /**  The title of the activity to see battery info. 
         */
        public static final int battery_info_label=0x7f0600c0;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_level_label=0x7f060032;
        public static final int battery_info_power_ac=0x7f060045;
        public static final int battery_info_power_ac_usb=0x7f060047;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_power_label=0x7f060030;
        public static final int battery_info_power_unknown=0x7f060048;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_power_unplugged=0x7f060044;
        public static final int battery_info_power_usb=0x7f060046;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_scale_label=0x7f060031;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_screen_on=0x7f06003c;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging=0x7f06003e;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging_ac=0x7f06003f;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_charging_usb=0x7f060040;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_discharging=0x7f060041;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_full=0x7f060043;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_label=0x7f06002f;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_not_charging=0x7f060042;
        /**  Battery Info screen. Value for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_status_unknown=0x7f06003d;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_technology_label=0x7f060034;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_temperature_label=0x7f060037;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_temperature_units=0x7f060038;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_uptime=0x7f060039;
        /**  Battery Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_voltage_label=0x7f060035;
        /**  Battery Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int battery_info_voltage_units=0x7f060036;
        /**  Phone info screen, section titles: 
         */
        public static final int battery_level_title=0x7f060201;
        /**  Battery usage since user reset the stats 
         */
        public static final int battery_since_reset=0x7f060325;
        /**  Battery usage since unplugged 
         */
        public static final int battery_since_unplugged=0x7f060324;
        /**  Battery usage duration 
         */
        public static final int battery_stats_duration=0x7f060326;
        /**  Battery usage during last unplugged period 
         */
        public static final int battery_stats_last_duration=0x7f060327;
        /**  Phone info screen, section titles: 
         */
        public static final int battery_status_title=0x7f060200;
        /**  Suggestion for getting apps to consume less power due to GPS
         */
        public static final int battery_sugg_apps_gps=0x7f060353;
        /**  Suggestion for exploring application info to stop or uninstall 
         */
        public static final int battery_sugg_apps_info=0x7f060352;
        /**  Suggestion for getting apps to consume less power 
         */
        public static final int battery_sugg_apps_settings=0x7f060354;
        /**  Suggestion for bluetooth 
         */
        public static final int battery_sugg_bluetooth_basic=0x7f06034f;
        /**  Suggestion for bluetooth headset 
         */
        public static final int battery_sugg_bluetooth_headset=0x7f060350;
        /**  Suggestion for reducing display power 
         */
        public static final int battery_sugg_display=0x7f06034b;
        /**  Suggestion to switch to airplane mode to save power 
         */
        public static final int battery_sugg_radio=0x7f060349;
        /**  Suggestion for wifi connectivity power drain 
         */
        public static final int battery_sugg_wifi=0x7f06034d;
        /**  Used as setting title (for checkbox) on second screen after selecting Bluetooth settings 
         */
        public static final int bluetooth=0x7f06004f;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference when A2DP is connected. 
         */
        public static final int bluetooth_a2dp_profile_summary_connected=0x7f060115;
        /**  Bluetooth settings.  Connection options screen.  The summary for the A2DP checkbox preference that describes how checking it will set the A2DP profile as preferred. 
         */
        public static final int bluetooth_a2dp_profile_summary_use_for=0x7f060119;
        /**  Strings for asking to the user whether to allow an app to enable discovery mode 
         */
        public static final int bluetooth_ask_discovery=0x7f060068;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth 
         */
        public static final int bluetooth_ask_enablement=0x7f060067;
        /**  Strings for asking to the user whether to allow an app to enable bluetooth and discovery mode 
         */
        public static final int bluetooth_ask_enablement_and_discovery=0x7f060069;
        /**  Message when bluetooth dialog for confirmation of passkey is showing 
         */
        public static final int bluetooth_confirm_passkey_msg=0x7f0600f3;
        /**  Bluetooth settings.  The title of the screen to pick which profiles to connect to on the device.  For example, headphones may have both A2DP and headset, this allows the user to choose which one he wants to connect to. 
         */
        public static final int bluetooth_connect_specific_profiles_title=0x7f06010a;
        /**  Bluetooth settings.  Message when cnonected to a device 
         */
        public static final int bluetooth_connected=0x7f060058;
        /**  Bluetooth settings.  Message when connecting to a device 
         */
        public static final int bluetooth_connecting=0x7f06005b;
        /**  Message for the error dialog when BT connecting operation fails generically. 
         */
        public static final int bluetooth_connecting_error_message=0x7f0600fe;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices that are hands free or a headset 
         */
        public static final int bluetooth_device=0x7f060060;
        /**  Bluetooth settings.  Connection options screen.  The summary of the online mode checkbox.  This describes what the setting does in the context of the screen. 
         */
        public static final int bluetooth_device_advanced_online_mode_summary=0x7f060113;
        /**  Bluetooth settings.  Connection options screen.  The title of the checkbox that controls whether the device is in "online" mode or "offline" mode.  This essentially is the checkbox that controls whether any checks / unchecks on a profile should be applied immediately, or next time the device is connected. 
         */
        public static final int bluetooth_device_advanced_online_mode_title=0x7f060112;
        /**  Bluetooth settings.  Connection options screen.  The title of the header that is above all of the profiles. 
         */
        public static final int bluetooth_device_advanced_profile_header_title=0x7f060114;
        /**  Bluetooth settings.  Connection options screen.  The title of the screen. 
         */
        public static final int bluetooth_device_advanced_title=0x7f060111;
        /**  Bluetooth settings.  Context menu item for a device.  Action will connect to all profiles on the device. 
         */
        public static final int bluetooth_device_context_connect=0x7f060104;
        /**  Bluetooth settings.  Context menu item for a device.  Action will take the user to another screen where they can choose exactly which profiles to connect to. 
         */
        public static final int bluetooth_device_context_connect_advanced=0x7f060109;
        /**  Bluetooth settings.  Context menu item for a device.  Action will disconnect from all profiles on the device. 
         */
        public static final int bluetooth_device_context_disconnect=0x7f060105;
        /**  Bluetooth settings.  Context menu item for a device.  Action will disconnect and remove pairing with the device. 
         */
        public static final int bluetooth_device_context_disconnect_unpair=0x7f060108;
        /**  Bluetooth settings.  Context menu item for a device.  Action will first pair, and then connect to all profiles on the device. 
         */
        public static final int bluetooth_device_context_pair_connect=0x7f060106;
        /**  Bluetooth settings.  Context menu item for a device.  Action will remove pairing with the device. 
         */
        public static final int bluetooth_device_context_unpair=0x7f060107;
        /**  Title for the bluetooth device info screen. 
         */
        public static final int bluetooth_device_info=0x7f0600f0;
        /**  Do not translate 
         */
        public static final int bluetooth_device_info_alias=0x7f0600ff;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int bluetooth_device_info_connectButton_text=0x7f06006e;
        /**  Do not translate 
         */
        public static final int bluetooth_device_info_delete=0x7f060101;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int bluetooth_device_info_deviceInfo_text=0x7f06006f;
        /**  Do not translate 
         */
        public static final int bluetooth_device_info_no_alias=0x7f060100;
        /**  Do not translate 
         */
        public static final int bluetooth_device_info_sdp=0x7f060102;
        /**  Bluetooth settings screen, title for the current bluetooth name setting 
         */
        public static final int bluetooth_device_name=0x7f060054;
        /**  Bluetooth settings screen, heading above the list of nearby bluetooth devices 
         */
        public static final int bluetooth_devices=0x7f060053;
        /**  Bluetooth settings.  Message for disconnecting from a bluetooth device 
         */
        public static final int bluetooth_disconnect_blank=0x7f060057;
        /**  Bluetooth settings.  Message when a device is disconnected 
         */
        public static final int bluetooth_disconnected=0x7f060059;
        /**  Bluetooth settings.  Message when disconnecting from a device 
         */
        public static final int bluetooth_disconnecting=0x7f06005a;
        /**  Message when bluetooth dialog when passkey needs to be displayed. 
         */
        public static final int bluetooth_display_passkey_msg=0x7f0600f5;
        /**  Bluetooth settings.  Dock Setting Title 
         */
        public static final int bluetooth_dock_settings=0x7f06011c;
        /**  Bluetooth settings.  Dock Setting Dialog - Checkbox selection 2: Use dock for media audio 
         */
        public static final int bluetooth_dock_settings_a2dp=0x7f06011f;
        /**  Bluetooth settings.  Dock Setting Dialog - Checkbox selection 1: Use dock as speaker phone 
         */
        public static final int bluetooth_dock_settings_headset=0x7f06011e;
        /**  Bluetooth settings.  Dock Setting Dialog - Remember setting and don't ask user again 
         */
        public static final int bluetooth_dock_settings_remember=0x7f060120;
        /**  Bluetooth settings.  Dock Setting Dialog Title 
         */
        public static final int bluetooth_dock_settings_title=0x7f06011d;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int bluetooth_enable_text=0x7f06006d;
        /**  Message when bluetooth dialog for passkey entry is showing 
         */
        public static final int bluetooth_enter_passkey_msg=0x7f0600f2;
        /**  Message when bluetooth dialog for pin entry is showing 
         */
        public static final int bluetooth_enter_pin_msg=0x7f0600f1;
        /**  Title for BT error dialogs. 
         */
        public static final int bluetooth_error_title=0x7f0600f9;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference when headset is connected. 
         */
        public static final int bluetooth_headset_profile_summary_connected=0x7f060116;
        /**  Bluetooth settings.  Connection options screen.  The summary for the headset checkbox preference that describes how checking it will set the headset profile as preferred. 
         */
        public static final int bluetooth_headset_profile_summary_use_for=0x7f06011a;
        /**  Message when bluetooth incoming pairing request for (2.1 devices) dialog is showing 
         */
        public static final int bluetooth_incoming_pairing_msg=0x7f0600f4;
        /**  Bluetooth settings screen, summary after selecting Discoverable check box 
         */
        public static final int bluetooth_is_discoverable=0x7f060051;
        /**  Bluetooth settings screen, summary text when there isn't a name set (for the name setting) 
         */
        public static final int bluetooth_name_not_set=0x7f060055;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices when not paired yet 
         */
        public static final int bluetooth_not_connected=0x7f06005d;
        /**  Bluetooth settings screen, Discoverable checkbox summary text 
         */
        public static final int bluetooth_not_discoverable=0x7f060052;
        /**  Notification message when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_message=0x7f060064;
        /**  Notification ticker text (shown in the status bar) when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_ticker=0x7f060062;
        /**  Notification title when a Bluetooth device wants to pair with us 
         */
        public static final int bluetooth_notif_title=0x7f060063;
        /**  Bluetooth on time 
         */
        public static final int bluetooth_on_time=0x7f06032a;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is connected. 
         */
        public static final int bluetooth_opp_profile_summary_connected=0x7f060117;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference when OPP is not connected. 
         */
        public static final int bluetooth_opp_profile_summary_not_connected=0x7f060118;
        /**  Bluetooth settings.  Connection options screen.  The summary for the OPP checkbox preference that describes how checking it will set the OPP profile as preferred. 
         */
        public static final int bluetooth_opp_profile_summary_use_for=0x7f06011b;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices when paired with one 
         */
        public static final int bluetooth_paired=0x7f06005f;
        /** Bluetooth settings screen, summary text under individual Bluetooth devices when pairing 
         */
        public static final int bluetooth_pairing=0x7f06005e;
        /**  Button text for accepting an incoming pairing request 
         */
        public static final int bluetooth_pairing_accept=0x7f0600f6;
        /**  Button text for declining an incoming pairing request 
         */
        public static final int bluetooth_pairing_decline=0x7f0600f7;
        /**  Message for the error dialog when BT pairing fails because the other device is down. 
         */
        public static final int bluetooth_pairing_device_down_error_message=0x7f0600fc;
        /**  Message for the error dialog when BT pairing fails generically. 
         */
        public static final int bluetooth_pairing_error_message=0x7f0600fa;
        /**  Message for the error dialog when BT pairing fails because the PIN /
    Passkey entered is incorrect. 
         */
        public static final int bluetooth_pairing_pin_error_message=0x7f0600fb;
        /**  Message for the error dialog when BT pairing fails because the other device rejected the pairing. 
         */
        public static final int bluetooth_pairing_rejected_error_message=0x7f0600fd;
        /**  Title for the dialog to enter PIN.  
         */
        public static final int bluetooth_pairing_request=0x7f0600ef;
        /**  Strings for dialog title when asking to the user whether to allow an app to enable discovery mode 
         */
        public static final int bluetooth_permission_request=0x7f060066;
        /**  Bluetooth settings: The title of the preference (list item) that initiates a scan for devices 
         */
        public static final int bluetooth_preference_scan_title=0x7f060103;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the A2DP profile. 
         */
        public static final int bluetooth_profile_a2dp=0x7f06010b;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the headset or handsfree profile. 
         */
        public static final int bluetooth_profile_headset=0x7f06010c;
        /**  Bluetooth settings.  The user-visible string that is used whenever referring to the OPP profile. 
         */
        public static final int bluetooth_profile_opp=0x7f06010d;
        /**  Bluetooth settings check box summary for turning on bluetooth 
         */
        public static final int bluetooth_quick_toggle_summary=0x7f0600eb;
        /**  Bluetooth settings 
 Bluetooth settings check box title on Main Settings screen 
         */
        public static final int bluetooth_quick_toggle_title=0x7f0600ea;
        /**  Generic string for remote Bluetooth device  
         */
        public static final int bluetooth_remote_device=0x7f0600f8;
        /**  Bluetooth settings screen, menu item to scan for nearby bluetooth devices 
         */
        public static final int bluetooth_scan_for_devices=0x7f060056;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int bluetooth_scan_text=0x7f06006b;
        /** Used as title on second screen after selecting Bluetooth settings 
         */
        public static final int bluetooth_settings=0x7f0600ec;
        /** Wireless controls screen, settings summary for the item tot ake you to the bluetooth settings screen 
         */
        public static final int bluetooth_settings_summary=0x7f0600ee;
        /**  Do not translate. Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int bluetooth_settings_text=0x7f06006c;
        /** Wireless controls screen, settings title for the item to take you to the bluetooth settings screen 
         */
        public static final int bluetooth_settings_title=0x7f0600ed;
        /**  Bluetooth settings.  The summary string when a device is connected to the A2DP profile. 
         */
        public static final int bluetooth_summary_connected_to_a2dp=0x7f06010e;
        /**  Bluetooth settings.  The summary string when a device is connected to the A2DP and headset profiles. 
         */
        public static final int bluetooth_summary_connected_to_a2dp_headset=0x7f060110;
        /**  Bluetooth settings.  The summary string when a device is connected to the headset profile. 
         */
        public static final int bluetooth_summary_connected_to_headset=0x7f06010f;
        /**  Strings for msg to display to user while bluetooth is turning on 
         */
        public static final int bluetooth_turning_on=0x7f06006a;
        /**  Bluetooth settings.  Message when the device state is unknown 
         */
        public static final int bluetooth_unknown=0x7f06005c;
        /**  Bluetooth settings screen, check box label when the Bluetooth device can be seen by others 
         */
        public static final int bluetooth_visibility=0x7f060050;
        /**  Sound & display settings screen, setting option name to change brightness 
         */
        public static final int brightness=0x7f0601bc;
        /**  Sound & display settings screen, setting option summary to change brightness 
         */
        public static final int brightness_summary=0x7f0601bd;
        /**  About phone screen,  setting option name
         */
        public static final int build_number=0x7f0601dd;
        /**  Summary for built-in keyboard settings 
         */
        public static final int builtin_keyboard_settings_summary=0x7f0602e9;
        /**  Title for built-in keyboard settings 
         */
        public static final int builtin_keyboard_settings_title=0x7f0602e8;
        /**  Manage applications, Header name used for cache information 
         */
        public static final int cache_header_label=0x7f060284;
        /**  Manage applications, label that appears next to the cache size 
         */
        public static final int cache_size_label=0x7f060286;
        /**  Main settings screen, Call settings summary for item to go into call settings 
         */
        public static final int call_settings_summary=0x7f060235;
        /**  Main settings screen, Call settings title for item to go into the call settings 
         */
        public static final int call_settings_title=0x7f060234;
        /**  ======================================================================================= 
 NEW STUFF 
 ======================================================================================= 
 Button label for generic cancel action 
         */
        public static final int cancel=0x7f0600c6;
        /**  Main Settings screen setting option summary text for the item to take you to the CDMA security and location screen 
         */
        public static final int cdma_security_settings_summary=0x7f0600e8;
        /**  Sound settings screen, the caption of the checkbox for having the notification volume be
         the same as the incoming call volume. 
         */
        public static final int checkbox_notification_same_as_incoming_call=0x7f060195;
        /**  The title of the activity to pick a time zone. 
         */
        public static final int choose_timezone=0x7f060075;
        /**  Manage applications, individual application screen, button label under Launch by default heading.  This is used to clear any default actions that may be assigned to this app.  
         */
        public static final int clear_activities=0x7f060291;
        /**  Manage applications, text label for button 
         */
        public static final int clear_cache_btn_text=0x7f060285;
        /**  Manage applications, individual application screen, confirmation dialog message. Displays when user selects to "Clear data". It warns the user of the consequences of clearing the data for an app. 
         */
        public static final int clear_data_dlg_text=0x7f06029e;
        /**  Manage applications, individual application screen, confirmation dialog title. Displays when user selects to "Clear data". 
         */
        public static final int clear_data_dlg_title=0x7f06029d;
        /**  Manage applications, individual application dialog box message. Shown when there was an error trying to clear the data. 
         */
        public static final int clear_data_failed=0x7f0602a3;
        /**  Manage applications, text for dialog if clear data fails
         */
        public static final int clear_failed_dlg_text=0x7f0602a7;
        /**  Manage applications, title for dialog if clear data fails
         */
        public static final int clear_failed_dlg_title=0x7f0602a6;
        /**  Manage applications, individual application info screen, button label under Storage heading. Button to clear all data associated with tis app (for exampel, remove all cached emails for an Email app) 
         */
        public static final int clear_user_data_text=0x7f06028d;
        public static final int computing_size=0x7f0602a9;
        /**  Running services, button to cancel stopping of a service 
         */
        public static final int confirm_stop_cancel=0x7f0602b4;
        /**  Running services, title of dialog to stop a service 
         */
        public static final int confirm_stop_service=0x7f0602b1;
        /**  Running services, message of dialog to stop a service 
         */
        public static final int confirm_stop_service_msg=0x7f0602b2;
        /**  Running services, button to stop a service 
         */
        public static final int confirm_stop_stop=0x7f0602b3;
        /**  Button label to connect to a wifi network
         */
        public static final int connect=0x7f060142;
        /**  Dialog title for when the user is trying to connect to a particular network
         */
        public static final int connect_to_blank=0x7f060143;
        /**  About phone settings screen, setting option name to see a list of contributors 
         */
        public static final int contributors_title=0x7f06024a;
        /**  Manage applications, Header name used for other controls 
         */
        public static final int controls_label=0x7f060287;
        /**  Subtitle for possible options 
         */
        public static final int controls_subtitle=0x7f06032e;
        /**  About phone settings screen, setting option name to see copyright-related info 
         */
        public static final int copyright_title=0x7f06024b;
        /**  credential installer title 
         */
        public static final int credential_installer_activity_title=0x7f060371;
        /**  Title of preference to enable/dislable access to credential storage 
         */
        public static final int credentials_access=0x7f0603c1;
        /**  Summary of preference to enable/dislable access to credential storage 
         */
        public static final int credentials_access_summary=0x7f0603c2;
        /**  Title of preference group for credential storage settings 
         */
        public static final int credentials_category=0x7f0603c0;
        /**  Description for the confirm-new-password input box 
         */
        public static final int credentials_confirm_password=0x7f0603ce;
        /**  toast message 
         */
        public static final int credentials_disabled=0x7f0603d9;
        /**  toast message 
         */
        public static final int credentials_enabled=0x7f0603d8;
        /**  toast message 
         */
        public static final int credentials_erased=0x7f0603d7;
        /**  Description when user set up the storage for the very first time 
         */
        public static final int credentials_first_time_hint=0x7f0603cf;
        /**  Title of preference to install certificates from SD card 
         */
        public static final int credentials_install_certificates=0x7f0603c5;
        /**  Summary of preference to install certificates from SD card 
         */
        public static final int credentials_install_certificates_summary=0x7f0603c6;
        /**  Description for the new-password input box 
         */
        public static final int credentials_new_password=0x7f0603cd;
        /**  Description for the old-password input box 
         */
        public static final int credentials_old_password=0x7f0603cc;
        public static final int credentials_password_empty=0x7f0603d5;
        public static final int credentials_password_too_short=0x7f0603d6;
        public static final int credentials_passwords_empty=0x7f0603d4;
        public static final int credentials_passwords_mismatch=0x7f0603d3;
        /**  Title of preference to reset credential storage 
         */
        public static final int credentials_reset=0x7f0603c9;
        /**  Description of dialog to reset the credential storage 
         */
        public static final int credentials_reset_hint=0x7f0603cb;
        /**  Summary of preference to reset credential storage 
         */
        public static final int credentials_reset_summary=0x7f0603ca;
        public static final int credentials_reset_warning=0x7f0603d1;
        public static final int credentials_reset_warning_plural=0x7f0603d2;
        /**  Title of preference to set storage password 
         */
        public static final int credentials_set_password=0x7f0603c7;
        /**  Summary of preference to set storage password 
         */
        public static final int credentials_set_password_summary=0x7f0603c8;
        /**  Title of dialog to enable/dislable access to credential storage 
         */
        public static final int credentials_unlock=0x7f0603c3;
        /**  Description of dialog to enable/dislable access to credential storage 
         */
        public static final int credentials_unlock_hint=0x7f0603c4;
        public static final int credentials_wrong_password=0x7f0603d0;
        /**  Manage applications, individual application info screen, label under Storage heading.  The amount of sapce taken up by the app's data (for example, downloaded emails or something like that) 
         */
        public static final int data_size_label=0x7f06028b;
        /**  Date & time settings screen title 
         */
        public static final int date_and_time=0x7f060070;
        /**  Main Settings screen setting option summary text for the item to go into the date and time settings. 
         */
        public static final int date_and_time_settings_summary=0x7f0600da;
        /**  Date and time settings 
 Main Settings screen setting option name to go into the date and time settings
         */
        public static final int date_and_time_settings_title=0x7f0600d9;
        /**  Date/time settings.  Summary of the checkbox for choosing between 12 hour time or 24 hour time.  Sample of 12-hour time 
         */
        public static final int date_time_12_hour_sample=0x7f060071;
        /**  Date/time settings.  Summary of the checkbox for choosing between 12 hour time or 24 hour time.  Sample of 24-hour time 
         */
        public static final int date_time_24_hour_sample=0x7f060072;
        /**  Date & time setting screen setting check box title 
         */
        public static final int date_time_24hour=0x7f0600de;
        /**  Date & time setting screen setting check box title if the date and time should be determined automatically 
         */
        public static final int date_time_auto=0x7f0600db;
        /**  Date & time setting screen setting option summary text when Automatic check box is clear 
         */
        public static final int date_time_auto_summaryOff=0x7f0600dd;
        /**  Date & time setting screen setting option summary text when Automatic check box is selected (that is, when date and time should be determined automatically) 
         */
        public static final int date_time_auto_summaryOn=0x7f0600dc;
        /**  Title of the dialog for setting the date. 
         */
        public static final int date_time_changeDate_text=0x7f060074;
        /**  Title of the dialog for setting the time. 
         */
        public static final int date_time_changeTime_text=0x7f060073;
        /**  Date & time setting screen setting option title.  This setting allows the user to choose how the date should be displayed in apps (what ordering for month and day, etc.) 
         */
        public static final int date_time_date_format=0x7f0600e2;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_date=0x7f0600e1;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_time=0x7f0600df;
        /**  Date & time setting screen setting option title 
         */
        public static final int date_time_set_timezone=0x7f0600e0;
        /**  Do not translate. 
         */
        public static final int debug_intent_sender_label=0x7f0600be;
        /**  Do not translate. Used as the value for a setting. 
         */
        public static final int default_date_format=0x7f060076;
        /**  Subtitle for application/subsystem details 
         */
        public static final int details_subtitle=0x7f06032d;
        /**  Activity title for battery usage details for an app. or power consumer 
         */
        public static final int details_title=0x7f06032c;
        /**  Development Settings summary.  The summary of the item to take the user to Development settings.  Development settings are settings meant for application developers. 
         */
        public static final int development_settings_summary=0x7f0602eb;
        /**  Development Settings.  the title for the item to take the user to Development settings.  Development settings are settings meant for application developers.  
         */
        public static final int development_settings_title=0x7f0602ea;
        /**  Device Info screen. Used for a status item's value when the proper value is not known 
         */
        public static final int device_info_default=0x7f060006;
        /**  The title of the activity to see random device info. 
         */
        public static final int device_info_label=0x7f0600bf;
        /**  About phone screen, show when a value of some status item is unavailable. 
         */
        public static final int device_info_not_available=0x7f0601de;
        /**  Advanced (used for diagnostics) device info activity title 
         */
        public static final int device_info_settings=0x7f0601d6;
        /**  Strings for BluetoothDevicePicker 
         */
        public static final int device_picker=0x7f060065;
        /**  About phone screen, title of the item to go into the Phone status screen 
         */
        public static final int device_status=0x7f0601e0;
        /**  About phone screen, phone status screen title 
         */
        public static final int device_status_activity_title=0x7f0601df;
        /**  About phone screen, summary of the item to go into the phone status screen 
         */
        public static final int device_status_summary=0x7f0601e1;
        /**  Disagree 
         */
        public static final int disagree=0x7f060246;
        /**  Label for chosen font size 
         */
        public static final int display_font_size_label=0x7f060079;
        /**  The title of the activity to adjust display settings 
         */
        public static final int display_label=0x7f0600c2;
        /**  label for text to indicate sort options 
         */
        public static final int display_order_text=0x7f060316;
        /**  Label of preview text when tweaking font size 
         */
        public static final int display_preview_label=0x7f060078;
        /**  Display settings 
 Sound & display settings screen, section header for settings related to display 
         */
        public static final int display_settings=0x7f0601b5;
        /**  Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". 
         */
        public static final int dlg_cancel=0x7f0602a0;
        /**  Manage applications, individual application screen, confirmation dialog button. Displays when user selects to "Clear data". Goes through with the clearing of the data. 
         */
        public static final int dlg_ok=0x7f06029f;
        /**  Dock audio settings 
         */
        public static final int dock_audio_settings_title=0x7f0601aa;
        /**  Dock audio summary for docked to car dock 
         */
        public static final int dock_audio_summary_car=0x7f0601ac;
        /**  Dock audio summary for docked to desk dock 
         */
        public static final int dock_audio_summary_desk=0x7f0601ab;
        /**  Dock audio summary for undocked 
         */
        public static final int dock_audio_summary_none=0x7f0601ad;
        /**  Dock audio summary for docked to unknown 
         */
        public static final int dock_audio_summary_unknown=0x7f0601ae;
        /**  Dock not found dialog text 
         */
        public static final int dock_not_found_text=0x7f0601b0;
        /**  Dock not found dialog title 
         */
        public static final int dock_not_found_title=0x7f0601af;
        /**  Dock settings title, top level 
         */
        public static final int dock_settings=0x7f0601a8;
        /**  Sound settings screen, dock settings summary
         */
        public static final int dock_settings_summary=0x7f060199;
        /**  Dock settings title 
         */
        public static final int dock_settings_title=0x7f0601a9;
        /**  Sound settings screen, setting option summary text when check box is clear 
         */
        public static final int dtmf_tone_enable_summary_off=0x7f06019c;
        /**  Sound settings screen, setting option summary text when check box is selected 
         */
        public static final int dtmf_tone_enable_summary_on=0x7f06019b;
        /**  Sound settings screen, setting check box label 
         */
        public static final int dtmf_tone_enable_title=0x7f06019a;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int emergency_tone_summary=0x7f0603db;
        /**  Sound settings screen, setting check box label 
         */
        public static final int emergency_tone_title=0x7f0603da;
        /**  String displayed when list is empty 
         */
        public static final int empty_list_msg=0x7f0602ab;
        /**  Setting checkbox title for Whether to enable USB debugging support on the phone. 
         */
        public static final int enable_adb=0x7f0602ec;
        /**  Setting checkbox summary for Whether to enable USB debugging support on the phone 
         */
        public static final int enable_adb_summary=0x7f0602ed;
        /**  APN error dialog messages: 
         */
        public static final int error_apn_empty=0x7f06021d;
        /**  Error message when Wi-Fi can't connect 
         */
        public static final int error_connecting=0x7f060140;
        /**  APN error dialog messages: 
         */
        public static final int error_mcc_not3=0x7f06021e;
        /**  APN error dialog messages: 
         */
        public static final int error_mnc_not23=0x7f06021f;
        /**  APN error dialog messages: 
         */
        public static final int error_name_empty=0x7f06021c;
        /**  Error message when Wi-Fi can't save the network 
         */
        public static final int error_saving=0x7f060141;
        /**  Error message when Wi-Fi can't scan for networks 
         */
        public static final int error_scanning=0x7f06013f;
        /**  Error message when Wi-Fi can't start 
         */
        public static final int error_starting=0x7f06013d;
        /**  Error message when Wi-Fi can't stop 
         */
        public static final int error_stopping=0x7f06013e;
        /**  APN error dialog title 
         */
        public static final int error_title=0x7f06021b;
        /**  Text for menu option in ManageApps screen to present various menu options 
         */
        public static final int filter=0x7f060296;
        /**  Text for filter option in ManageApps screen to display all installed
    applications 
         */
        public static final int filter_apps_all=0x7f060298;
        /**  Text for filter option in ManageApps screen to display list of running
    packages only. 
         */
        public static final int filter_apps_running=0x7f06029a;
        /**  Text for filter option in ManageApps screen to display third party 
    applications only 
         */
        public static final int filter_apps_third_party=0x7f060299;
        /**  Title of dialog for presenting filter options 
         */
        public static final int filter_dlg_title=0x7f060297;
        /**  About phone screen, status item label 
         */
        public static final int firmware_version=0x7f0601d9;
        /**  Do not translate. label for font size preview.  Does not need to be translated. 
         */
        public static final int font_size_preview_text=0x7f06002c;
        /**  Button. Chosen when they want to save the chosen text size. 
         */
        public static final int font_size_save=0x7f06002d;
        /**  Manage applications, text label for button to kill / force stop an application 
         */
        public static final int force_stop=0x7f060288;
        /**  Button caption to forget a wifi network 
         */
        public static final int forget_network=0x7f060127;
        /**  Status message of Wi-Fi when it is authenticating with a network 
         */
        public static final int fragment_status_authenticating=0x7f060174;
        /**  Status message of Wi-Fi when it is connect to a network 
         */
        public static final int fragment_status_connected=0x7f060176;
        /**  Status message of Wi-Fi when it is connecting to a particular network 
         */
        public static final int fragment_status_connecting=0x7f060173;
        /**  Status message of Wi-Fi when it is disconnected from a network
         */
        public static final int fragment_status_disconnected=0x7f060178;
        /**  Status message of Wi-Fi when it is disconnecting from a network 
         */
        public static final int fragment_status_disconnecting=0x7f060177;
        /**  Status message of Wi-Fi when it is a failure (connection) 
         */
        public static final int fragment_status_failed=0x7f060179;
        /**  Status message of Wi-Fi when it is obtaining the IP address from a netwrok 
         */
        public static final int fragment_status_obtaining_ip=0x7f060175;
        /**  Status message of Wi-Fi when it is scanning 
         */
        public static final int fragment_status_scanning=0x7f060172;
        /**  Title for the screen that lets the user choose a gadget to add to the home screen
         (or other screens that can host gadgets).  Note to translators: we're still determining
         the final name for Gadgets/Widgets, so please translate both for now. 
         */
        public static final int gadget_picker_title=0x7f0602f4;
        /**  Power Control Widget 
         */
        public static final int gadget_title=0x7f06036e;
        public static final int gadget_toggle_bluetooth=0x7f060370;
        public static final int gadget_toggle_wifi=0x7f06036f;
        /**  Sound settings screen, setting option summary text when check box is clear 
         */
        public static final int haptic_feedback_enable_summary_off=0x7f0601a2;
        /**  Sound settings screen, setting option summary text when check box is selected 
         */
        public static final int haptic_feedback_enable_summary_on=0x7f0601a1;
        /**  Sound settings screen, setting check box label 
         */
        public static final int haptic_feedback_enable_title=0x7f0601a0;
        /**  On Text & language settings screen, category for physical keyboard text entry options. 
         */
        public static final int hardkeyboard_category=0x7f0602c6;
        public static final int hello=0x7f060000;
        /**  Warning message about security implications of enabling an input method, displayed as a dialog
         message when the user selects to enable an IME. 
         */
        public static final int ime_security_warning=0x7f0602ca;
        /**  Sound settings screen, the title of the volume bar to adjust the incoming call volume 
         */
        public static final int incoming_call_volume_title=0x7f060193;
        /**  Input Methods Settings localized format string for generating the appropriate "Foo settings" menu label for the Input Method named "Foo" 
         */
        public static final int input_methods_settings_label_format=0x7f0602e6;
        public static final int input_methods_settings_summary=0x7f0602e5;
        /**  Input methods Settings 
         */
        public static final int input_methods_settings_title=0x7f0602e4;
        /**  Applications settings screen, message text of alert that appears if user selects the "Unknown sources" check box 
         */
        public static final int install_all_warning=0x7f06027f;
        /**  Applications settings screen, setting check box title. If checked, the system allows installation of applications that are downloaded from random places, such as web sites.  
         */
        public static final int install_applications=0x7f06027d;
        /**  Applications settings screen, setting check box summary.  This is the summary for "Unknown sources" checkbox  
         */
        public static final int install_unknown_applications=0x7f06027e;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_account_label=0x7f06007f;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_action_label=0x7f06007c;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_data_label=0x7f06007a;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_resource_label=0x7f06007e;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_sendbroadcast_text=0x7f06007b;
        /**  Used for diagnostic screens, precise translation is not necessary 
         */
        public static final int intent_sender_startactivity_text=0x7f06007d;
        /**  SD card & phone storage settings screen heading. This is displayed above items that pertain to the phone's internal storage  
         */
        public static final int internal_memory=0x7f0601f6;
        public static final int invalid_size_value=0x7f0602aa;
        /**  Wi-Fi IP addrress label 
         */
        public static final int ip_address=0x7f060138;
        /**  Setting Checkbox title whether to keep the screen on when plugged in to a power source 
         */
        public static final int keep_screen_on=0x7f0602ee;
        /**  setting Checkbox summary whether to keep the screen on when plugged in  
         */
        public static final int keep_screen_on_summary=0x7f0602ef;
        /**  About phone screen,  setting option name
         */
        public static final int kernel_version=0x7f0601dc;
        /**  On Text & language settings screen, heading. Inside the "Locale & text" screen, this is the header for settings that are for locale changes. 
         */
        public static final int language_category=0x7f0602bd;
        /**  Title of Language and keyboard settings screen 
         */
        public static final int language_keyboard_settings_title=0x7f0602bb;
        /**  LocalePicker 
 Title for the locale picker activity 
         */
        public static final int language_picker_title=0x7f0600bb;
        /**  Title of setting on main settings screen.  This item will take the user to the screen to tweak settings realted to locale and text 
         */
        public static final int language_settings=0x7f0602ba;
        /**  Summary of setting on main settings screen.  This item will take the user to the screen to tweak settings realted to locale and text 
         */
        public static final int language_settings_summary=0x7f0602bc;
        /**  choice for the font size spinner 
         */
        public static final int large_font=0x7f06002b;
        /**  label for launch count 
         */
        public static final int launch_count_label=0x7f060318;
        /**  About phone settings screen, setting option name to go to dialog that shows legal info 
         */
        public static final int legal_information=0x7f060249;
        /**  About phone settings screen, setting option name to see licensing info 
         */
        public static final int license_title=0x7f06024c;
        public static final int loading=0x7f06029b;
        /**  Security & location settings screen, setting check box label if the GPS receiver should be enabled 
         */
        public static final int location_gps=0x7f06023c;
        /**  Security & location settings screen, setting summary when Use GPS satellites check box is clear 
         */
        public static final int location_gps_disabled=0x7f06023e;
        /**  Security & location settings screen, setting summary when Use wireless networks check box is selected 
         */
        public static final int location_neighborhood_level=0x7f06023b;
        /**  Security & location settings screen, setting check box label if the user wants to use wireless network-based positioning (cell ID, wifi, etc.) 
         */
        public static final int location_network_based=0x7f060239;
        /**  Security & location settings screen, setting summary when Use wireless networks check box is clear 
         */
        public static final int location_networks_disabled=0x7f06023a;
        /**  Location settings section title 
         */
        public static final int location_section_title=0x7f0603de;
        /**  Location & security settings screen title 
         */
        public static final int location_security_settings_title=0x7f0600e6;
        /**  Security & location settings screen, setting summary when Use GPS satellites check box is selected 
         */
        public static final int location_street_level=0x7f06023d;
        /**  Security & location settings screen, section header for settings relating to location 
         */
        public static final int location_title=0x7f060238;
        /**  ChooseLockPatternExample, screen hint text at bottom of screen. These are instructions and rules for drawing a good patttern 
         */
        public static final int lock_example_message=0x7f060277;
        /**  ChooseLockPatternExample, screen title that shows an example pattern 
         */
        public static final int lock_example_title=0x7f060276;
        /**  ChooseLockPatternTutorial, tutorial screen text 
         */
        public static final int lock_intro_message=0x7f060275;
        /**  Lock Pattern settings 
 Security & location settings screen, header 
         */
        public static final int lock_settings_title=0x7f060257;
        /**  ChooseLockPatternTutorial, tutorial screen title 
         */
        public static final int lock_title=0x7f060274;
        /**  Security & location settings screen, setting option name 
         */
        public static final int lockpattern_change_lock_pattern_label=0x7f060258;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  When they are ready to draw it once again to confirm it, they press this button. 
         */
        public static final int lockpattern_confirm_button_text=0x7f060264;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen. Once they draw a new pattern and confirm it by drawing it again, they press this button to exit 
         */
        public static final int lockpattern_continue_button_text=0x7f060267;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen to confirm pattern 
         */
        public static final int lockpattern_need_to_confirm=0x7f060262;
        /**  Security & location settings screen, change unlock pattern screen instruction when the user chooses "Change unlock pattern".  We first ask the user toe nter the current pattern, and this is the message seen 
         */
        public static final int lockpattern_need_to_unlock=0x7f060259;
        /**  Do not translate. 
         */
        public static final int lockpattern_need_to_unlock_footer=0x7f06025a;
        /**  Security & location settings screen, change unlock pattern screen instruction if user draws incorrect pattern 
         */
        public static final int lockpattern_need_to_unlock_wrong=0x7f06025b;
        /**  Do not translate. 
         */
        public static final int lockpattern_need_to_unlock_wrong_footer=0x7f06025c;
        public static final int lockpattern_pattern_confirmed_header=0x7f060263;
        /**  Security & location settings screen, change unlock pattern screen message on top of screen after drawing pattern 
         */
        public static final int lockpattern_pattern_entered_header=0x7f060261;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen if user doesn't connect enough dots 
         */
        public static final int lockpattern_recording_incorrect_too_short=0x7f060260;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen while drawing pattern 
         */
        public static final int lockpattern_recording_inprogress=0x7f06025f;
        /**  Security & location settings screen, change unlock pattern screen hint on bottom of screen.  We are telling them to press the menu button to see more options or help. 
         */
        public static final int lockpattern_recording_intro_footer=0x7f06025e;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen.  This si when they are supposed to draw a new unlock pattern (for example, if they are changing their unlock patterns)..
         */
        public static final int lockpattern_recording_intro_header=0x7f06025d;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen.  After they draw a pattern and release their finger, we display the pattern so they remember.  If they are nto satisfied with this pattern, they click this button to redraw the pattern. 
         */
        public static final int lockpattern_restart_button_text=0x7f060265;
        /**  Security & location settings screen, change unlock pattern screen button, on bottom of screen. If they are supposed to enter their current pattern before being able to draw another one, and they screw up, they hit this button to try again 
         */
        public static final int lockpattern_retry_button_text=0x7f060266;
        /**  Security & location settings screen, setting option name when user has previously set an unlock pattern and wants to change to a new pattern 
         */
        public static final int lockpattern_settings_change_lock_pattern=0x7f06026e;
        /**  Security & location settings screen, setting option name when user has never set an unlock pattern 
         */
        public static final int lockpattern_settings_choose_lock_pattern=0x7f06026d;
        /**  Security & location settings screen, setting summary for the checkbox "Require pattern" 
         */
        public static final int lockpattern_settings_enable_summary=0x7f06026a;
        /**  Security & location settings screen, setting check box title. This setting controls whether tactile feedback will be produced when the user draws the pattern.
         */
        public static final int lockpattern_settings_enable_tactile_feedback_title=0x7f06026c;
        /**  Security & location settings screen, setting check box title if the unlock pattern MUST be drawn everytime they turn on the screen 
         */
        public static final int lockpattern_settings_enable_title=0x7f060269;
        /**  Security & location settings screen, setting check box title. This setting controls whether a visible green line is drawn as the user moves his finger around while drawing the unlock pattern.  If checked, this line is drawn.  If unchecked, there is nothing drawn so the user does not reveal his pattern while he unlocks the phone.
         */
        public static final int lockpattern_settings_enable_visible_pattern_title=0x7f06026b;
        /**  Security & location settings screen, the help instructions (an animation) caption 
         */
        public static final int lockpattern_settings_help_how_to_record=0x7f06026f;
        /**  Security & location settings screen, unlock screen activity title 
         */
        public static final int lockpattern_settings_title=0x7f060268;
        /**  Security & location settings screen, change unlock pattern screen countdown hint on bottom of screen after too many incorrect attempts 
         */
        public static final int lockpattern_too_many_failed_confirmation_attempts_footer=0x7f060271;
        /**  Security & location settings screen, change unlock pattern screen instruction on top of screen after too many incorrect attempts 
         */
        public static final int lockpattern_too_many_failed_confirmation_attempts_header=0x7f060270;
        /**  Manage applications screen, individual app screen, button label when the user wants to manage the space taken up by an app. 
         */
        public static final int manage_space_text=0x7f060295;
        /**  Applications settings screen, setting option summary for the user to go to the screen to manage installed applications  
         */
        public static final int manageapplications_settings_summary=0x7f060279;
        /**  Applications settings screen, setting option name for the user to go to the screen to manage installed applications  
         */
        public static final int manageapplications_settings_title=0x7f060278;
        /**  SD card & phone storage settings screen, button on screen after user selects Factory data reset 
         */
        public static final int master_clear_button_text=0x7f060226;
        /**  SD card & phone storage settings screen, message on screen after user selects Factory data reset 
         */
        public static final int master_clear_desc=0x7f060225;
        /**  Master clear failed message 
         */
        public static final int master_clear_failed=0x7f06022b;
        /**  SD card & phone storage settings screen, button on screen after user selects Reset phone button 
         */
        public static final int master_clear_final_button_text=0x7f060228;
        /**  SD card & phone storage settings screen, message on screen after user selects Reset phone button 
         */
        public static final int master_clear_final_desc=0x7f060227;
        /**  Explanation of drawing unlockp attern to reset phone 
         */
        public static final int master_clear_gesture_explanation=0x7f06022a;
        /**  Message to draw an unlock pattern before clearing the device 
         */
        public static final int master_clear_gesture_prompt=0x7f060229;
        /**  SD card & phone storage settings screen, setting option summary text under Internal phone storage heading 
         */
        public static final int master_clear_summary=0x7f060224;
        /**  Master Clear 
 SD card & phone storage settings screen, setting option name under Internal phone storage heading 
         */
        public static final int master_clear_title=0x7f060223;
        /**  SD card & phone storage settings screen, button on screen after user selects Factory data reset 
         */
        public static final int media_format_button_text=0x7f06022f;
        /**  SD card & phone storage settings screen, message on screen after user selects Factory data reset 
         */
        public static final int media_format_desc=0x7f06022e;
        /**  SD card & phone storage settings screen, button on screen after user selects Format media button 
         */
        public static final int media_format_final_button_text=0x7f060231;
        /**  SD card & phone storage settings screen, message on screen after user selects Format media button 
         */
        public static final int media_format_final_desc=0x7f060230;
        /**  Explanation of drawing unlock pattern to format card 
         */
        public static final int media_format_gesture_explanation=0x7f060233;
        /**  Message to draw an unlock pattern before clearing the device 
         */
        public static final int media_format_gesture_prompt=0x7f060232;
        /**  SD card & phone storage settings screen, setting option summary text under Internal phone storage heading 
         */
        public static final int media_format_summary=0x7f06022d;
        /**  Media Format 
 SD card & phone storage settings screen, setting option name under Internal phone storage heading 
         */
        public static final int media_format_title=0x7f06022c;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int media_volume_summary=0x7f060198;
        /**  Sound settings screen, setting option name 
         */
        public static final int media_volume_title=0x7f060197;
        /**  choice for the font size spinner 
         */
        public static final int medium_font=0x7f06002a;
        /**  SD card & phone storage settings title. The amount of free space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section. 
         */
        public static final int memory_available=0x7f0601f8;
        /**  SD card & phone storage settings screen heading.  The total amount of storage space for some storage partition.  For example, this is listed under both the "Internal phone storage" section and the "SD card" section 
         */
        public static final int memory_size=0x7f0601f9;
        /**  Edit access point screen menu option to discard the user's changes for this APN 
         */
        public static final int menu_cancel=0x7f06021a;
        /**  Edit access point screen menu option to delete this APN 
         */
        public static final int menu_delete=0x7f060217;
        /**  APNs screen menu option to create a brand spanking new APN 
         */
        public static final int menu_new=0x7f060218;
        /**  APNs screen menu option to reset default APN settings 
         */
        public static final int menu_restore=0x7f060221;
        /**  Edit access point screen menu option to save the user's changes for this APN to the persistent storage 
         */
        public static final int menu_save=0x7f060219;
        /**  Menu label for viewing battery usage since unplugged 
         */
        public static final int menu_stats_last_unplugged=0x7f060356;
        /**  Menu label for refreshing with latest usage numbers 
         */
        public static final int menu_stats_refresh=0x7f060358;
        /**  Menu label for viewing battery usage total 
         */
        public static final int menu_stats_total=0x7f060357;
        /**  Menu label for viewing battery usage since unplugged 
         */
        public static final int menu_stats_unplugged=0x7f060355;
        /**  About phone screen, status item label
         */
        public static final int model_number=0x7f0601da;
        /**  Wireless controls, the item summary for the user to go into the network settings 
         */
        public static final int network_settings_summary=0x7f060237;
        /**  Wireless controls, item title to go into the network settings 
         */
        public static final int network_settings_title=0x7f060236;
        /**  mobile network settings screen, setting option name 
         */
        public static final int networks=0x7f0600d7;
        /**  ChooseLockPatternTutorial, button labels: Continue to the next page of the tutorial 
         */
        public static final int next_button_label=0x7f060273;
        /**  SetupWizard strings used by DateTimeSettingsSetupWizard.  The button label for going to the next screen. 
         */
        public static final int next_label=0x7f0600ba;
        /**  Strings for Dialog no button 
         */
        public static final int no=0x7f060005;
        /**  Message for announcing the lack of installed accessibility services. 
         */
        public static final int no_accessibility_services_summary=0x7f06031f;
        /**  Running services, body text when there are no services to show 
         */
        public static final int no_running_services=0x7f0602b0;
        /**  The option in the date-format picker for using the normal format
         called for by the user's locale. 
         */
        public static final int normal_date_format=0x7f060077;
        /**  Sound settings screen, notification light repeat pulsing summary 
         */
        public static final int notification_pulse_summary=0x7f060192;
        /**  Sound settings screen, notification light repeat pulsing title 
         */
        public static final int notification_pulse_title=0x7f060191;
        /**  Sound settings screen, setting option title
         */
        public static final int notification_sound_dialog_title=0x7f060196;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int notification_sound_summary=0x7f060190;
        /**  Sound settings screen, setting option name 
         */
        public static final int notification_sound_title=0x7f06018f;
        /**  Sound settings screen, the title of the volume bar to adjust the notification volume 
         */
        public static final int notification_volume_title=0x7f060194;
        /**  Summary for on-screen keyboard settings 
         */
        public static final int onscreen_keyboard_settings_summary=0x7f0602e7;
        /**  Subtitle for list of packages 
         */
        public static final int packages_subtitle=0x7f06032f;
        /**  Manage applications, individual application info screen, heading for settings related to the app's permissions. for example, it may list all the permissions the app has. 
         */
        public static final int permissions_label=0x7f060283;
        /**  Personal data section title 
         */
        public static final int personal_data_section_title=0x7f0603e0;
        /**  The title of the activity to see phone info 
         */
        public static final int phone_info_label=0x7f0600c3;
        /**  On Text & language settings screen, setting option name. title of the setting to take the user to a screen to select the locale. 
         */
        public static final int phone_language=0x7f0602bf;
        /**  On Text & language settings screen, setting option name. summary of the setting to take the user to a screen to select the locale. 
         */
        public static final int phone_language_summary=0x7f0602c0;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int ping_test_label=0x7f0600a5;
        /**  Sound settings screen, setting option summary text when check box is clear 
         */
        public static final int play_media_notification_sounds_enable_summary_off=0x7f0601a5;
        /**  Sound settings screen, setting option summary text when check box is selected 
         */
        public static final int play_media_notification_sounds_enable_summary_on=0x7f0601a4;
        /**  Sound settings screen, setting check box label 
         */
        public static final int play_media_notification_sounds_enable_title=0x7f0601a3;
        /**  Caption for the ca certificate 
         */
        public static final int please_select_ca_certificate=0x7f060149;
        /**  Caption for the client_certificate 
         */
        public static final int please_select_client_certificate=0x7f060148;
        /**  Caption for the eap method 
         */
        public static final int please_select_eap=0x7f060144;
        /**  Caption for the phase2 
         */
        public static final int please_select_phase2=0x7f060145;
        /**  Caption for the anonymous_identity 
         */
        public static final int please_type_anonymous_identity=0x7f060147;
        /** Wi-Fi settings screen, connect to network dialog box, field label and hint text 
         */
        public static final int please_type_hex_key=0x7f06014b;
        /**  Caption for the identity 
         */
        public static final int please_type_identity=0x7f060146;
        /**  Caption for the wireless password 
         */
        public static final int please_type_passphrase=0x7f06014a;
        /**  Label for power consumed by Bluetooth 
         */
        public static final int power_bluetooth=0x7f060332;
        /**  Label for power consumed by Cell idle 
         */
        public static final int power_cell=0x7f060333;
        /**  Label for power consumed when Idle 
         */
        public static final int power_idle=0x7f060335;
        /**  Label for power consumed by Calling 
         */
        public static final int power_phone=0x7f060334;
        /**  Label for power consumed by the screen 
         */
        public static final int power_screen=0x7f060330;
        /**  Activity title summary for App Fuel Gauge summary 
         */
        public static final int power_usage_summary=0x7f060323;
        /**  Activity title for App Fuel Gauge summary 
         */
        public static final int power_usage_summary_title=0x7f060322;
        /**  Label for power consumed by WiFi 
         */
        public static final int power_wifi=0x7f060331;
        /**  Privacy settings menu title 
         */
        public static final int privacy_settings=0x7f0603dc;
        /**  Privacy settings activity title 
         */
        public static final int privacy_settings_title=0x7f0603dd;
        /**  Label for kernel threads 
         */
        public static final int process_kernel_label=0x7f060359;
        /**  Label for mediaserver process 
         */
        public static final int process_mediaserver_label=0x7f06035a;
        /** Bluetooth settings screen, text that appears in heading bar when scanning for devices 
         */
        public static final int progress_scanning=0x7f060061;
        /**  HTTP proxy settings. The button to save. 
         */
        public static final int proxy_action_text=0x7f060083;
        /**  HTTP proxy settings. Button to clear the proxy box. 
         */
        public static final int proxy_clear_text=0x7f060080;
        /**  HTTP proxy settings. The button to restore the defaults. 
         */
        public static final int proxy_defaultView_text=0x7f060082;
        /**  HTTP proxy settings. Title if there is an error
         */
        public static final int proxy_error=0x7f060085;
        /**  HTTP proxy settings. Button to get rid of error box
         */
        public static final int proxy_error_dismiss=0x7f060086;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_empty_host_set_port=0x7f060089;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_empty_port=0x7f060088;
        /**  HTTP proxy settings. The error if the hostname is not valid 
         */
        public static final int proxy_error_invalid_host=0x7f060087;
        /**  HTTP proxy settings. Error msg 
         */
        public static final int proxy_error_invalid_port=0x7f06008a;
        /**  HTTP proxy settings. The text field for the hostname 
         */
        public static final int proxy_hostname_label=0x7f060084;
        /**  HTTP proxy settings. The port number label. 
         */
        public static final int proxy_port_label=0x7f060081;
        /**  The title of the activity to adjust proxy settings 
         */
        public static final int proxy_settings_label=0x7f0600c5;
        /**  On the Quick launch settings screen, title of the item for shortcut letters that are not assigned to an application yet. Quick launch is assigning a global shortcut to launch a specific app. 
         */
        public static final int quick_launch_assign_application=0x7f0602db;
        /**  Clear dialog for quick launch setting box button labels: 
         */
        public static final int quick_launch_clear_cancel_button=0x7f0602e1;
        /**  On the Quick launch settings screen, message in the "Clear shortcut" confirmation dialog.  See the title for this dialog for more info. 
         */
        public static final int quick_launch_clear_dialog_message=0x7f0602df;
        /**  On the Quick launch settings screen, title of "Clear shortcut" confirmation dialog. This is reached by longpressing an item for a shortcut letter.  This allows the user to clear the assigned application for that shortcut letter. 
         */
        public static final int quick_launch_clear_dialog_title=0x7f0602de;
        /**  Clear dialog for quick launch setting box button labels: 
         */
        public static final int quick_launch_clear_ok_button=0x7f0602e0;
        /**  Quick launch screen, when assigning an app to a shortcut, this menu item to show a list of all applications.  
         */
        public static final int quick_launch_display_mode_applications=0x7f0602e2;
        /**  Quick launch screen, when assigning an app to a shortcut, this menu item to show a list of all shortcutable applications 
         */
        public static final int quick_launch_display_mode_shortcuts=0x7f0602e3;
        /**  On the Quick launch settings screen, summary text for the item of letters that are not assigned. See the quick launch "Assign application" for a description of quick launch 
         */
        public static final int quick_launch_no_shortcut=0x7f0602dc;
        /**  On the Quick launch settings screen, summary text under the item for each assigned letter.  
         */
        public static final int quick_launch_shortcut=0x7f0602dd;
        /**  The summary of the item to go into the Quick launch settings. This is a description of what Quick launch offers. 
         */
        public static final int quick_launch_summary=0x7f0602da;
        /**  The title of the item to go into the Quick launch settings. 
         */
        public static final int quick_launch_title=0x7f0602d9;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_cid=0x7f060026;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_connected=0x7f06001e;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_connecting=0x7f06001d;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_disconnected=0x7f06001c;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_data_suspended=0x7f06001f;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_asu=0x7f060024;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_bytes=0x7f060022;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_dbm=0x7f060023;
        /**  Phone Info screen. Units shown after a value.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_display_packets=0x7f060021;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_lac=0x7f060025;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_disableData=0x7f060010;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_disableDataOnBoot=0x7f060012;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_enableData=0x7f06000f;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_enableDataOnBoot=0x7f060011;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_getPDP=0x7f06000e;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewADN=0x7f06000b;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewFDN=0x7f06000c;
        /**  Phone Info screen. Menu item label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_menu_viewSDN=0x7f06000d;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_idle=0x7f060019;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_offhook=0x7f06001b;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_phone_ringing=0x7f06001a;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_roaming_in=0x7f060017;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_roaming_not=0x7f060018;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_emergency=0x7f060015;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_in=0x7f060013;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_off=0x7f060016;
        /**  Phone Info screen. Status label.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_service_out=0x7f060014;
        /**  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radioInfo_unknown=0x7f060020;
        /**  Main Settings screen settings summary text for the "Wireless controls" setting 
         */
        public static final int radio_controls_summary=0x7f0600cf;
        /**  Main Settings screen settings title for things like Wi-Fi, bluetooth, airplane mode.  This will take you to another screen with those settings. 
         */
        public static final int radio_controls_title=0x7f0600cd;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_band_mode_label=0x7f06009e;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_call_redirect_label=0x7f060091;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_call_status_label=0x7f060099;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_current_network_label=0x7f060094;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_data_attempts_label=0x7f06008d;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_data_successes_label=0x7f060095;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gprs_service_label=0x7f06008e;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gsm_disconnects_label=0x7f060093;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_gsm_service_label=0x7f060097;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_http_client_test=0x7f0600a3;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_imei_label=0x7f060090;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_message_waiting_label=0x7f06009c;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_neighboring_location_label=0x7f06008c;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_network_type_label=0x7f06009f;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_phone_number_label=0x7f06009d;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ping_hostname=0x7f0600a2;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ping_ipaddr=0x7f0600a1;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_received_label=0x7f060096;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_resets_label=0x7f060092;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_ppp_sent_label=0x7f06009a;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_radio_resets_label=0x7f06009b;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_roaming_label=0x7f06008f;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_set_perferred_label=0x7f0600a0;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_signal_location_label=0x7f06008b;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_signal_strength_label=0x7f060098;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_label=0x7f0600a6;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_refresh_label=0x7f0600a8;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_smsc_update_label=0x7f0600a7;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_toggle_ciph_label=0x7f0600a4;
        /**  Radio Info screen. Label for a status item.  Used for diagnostic info screens, precise translation isn't needed 
         */
        public static final int radio_info_toggle_dns_check_label=0x7f0600a9;
        /**  SD card status when it is mounted as read only  
         */
        public static final int read_only=0x7f0601ff;
        /**  Manage app screen, shown when the activity is busy recomputing the size of each app 
         */
        public static final int recompute_size=0x7f06029c;
        /**  The message of dialog indicated restoring default APN settings in progress 
         */
        public static final int restore_default_apn=0x7f060220;
        /**  APNs screen toast message to inform reset default APN settings is completed 
         */
        public static final int restore_default_apn_completed=0x7f060222;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int ring_volume_summary=0x7f06018c;
        /**  Sound settings screen, setting option name 
         */
        public static final int ring_volume_title=0x7f06018b;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int ringtone_summary=0x7f06018a;
        /**  Sound settings screen, setting option name to pick ringtone (a list dialog comes up)
         */
        public static final int ringtone_title=0x7f060189;
        /**  mobile network settings screen, setting check box title 
         */
        public static final int roaming=0x7f0600d0;
        /**  mobile network settings screen, setting option summary text when check box is clear 
         */
        public static final int roaming_disable=0x7f0600d2;
        /**  mobile network settings screen, setting option summary text when check box is selected 
         */
        public static final int roaming_enable=0x7f0600d1;
        /**  mobile network settings screen, dialog message when you are roaming and clear the "Data roaming" check box 
         */
        public static final int roaming_reenable_message=0x7f0600d3;
        /**  mobile network settings screen, title of dialog box that appears when you select the "Data roaming" check box 
         */
        public static final int roaming_reenable_title=0x7f0600d6;
        /**  mobile network settings screen, button on dialog box that appears when you are roaming and clear the "Data roaming" check box 
         */
        public static final int roaming_turn_it_on_button=0x7f0600d4;
        /**  mobile network settings screen, message in dialog box that appears when you select the "Data roaming" check box 
         */
        public static final int roaming_warning=0x7f0600d5;
        /**  Services settings screen, setting option summary for the user to go to the screen to view running services  
         */
        public static final int runningservices_settings_summary=0x7f0602ae;
        /**  Services settings screen, setting option name for the user to go to the screen to view running services 
         */
        public static final int runningservices_settings_title=0x7f0602ad;
        /** Wi-Fi settings screen menu option 
         */
        public static final int scan_wifi=0x7f06014d;
        /**  Sound & display settings screen, setting option name to change screen timeout 
         */
        public static final int screen_timeout=0x7f0601be;
        /**  Sound & display settings screen, setting option summary to change screen timeout 
         */
        public static final int screen_timeout_summary=0x7f0601bf;
        /**  The title of the activity to adjust SD card settings
         */
        public static final int sd_card_settings_label=0x7f0600c4;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   
         */
        public static final int sd_eject=0x7f0601fa;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.  This will be done before the user phyiscally removes the SD card from the phone.  Kind of like the "Safely remove" on some operating systems.   
         */
        public static final int sd_eject_summary=0x7f0601fb;
        /**  SD card & phone storage settings item title that will result in the phone formatting the SD card.   
         */
        public static final int sd_format=0x7f0601fc;
        /**  SD card & phone storage settings item title that will result in the phone unmounting the SD card.   
         */
        public static final int sd_format_summary=0x7f0601fd;
        /**  SD card & phone storage settings screen heading. This is displayed above items that pertain to the SD card 
         */
        public static final int sd_memory=0x7f0601f7;
        /**  SD card status when it is not available status 
         */
        public static final int sd_unavailable=0x7f0601fe;
        /**  Instructions after the user changes the mass storage settings 
         */
        public static final int sdcard_changes_instructions=0x7f0600af;
        /**  Used for diagnostic info screens, precise translation isn't needed. Formats the SD card in the phone, meaning it will be erased and reformatted 
         */
        public static final int sdcard_format=0x7f060028;
        /**  Title for a notification shown. 
         */
        public static final int sdcard_setting=0x7f06002e;
        /**  Th label for the available (free) sapce on the SD card 
         */
        public static final int sdcard_settings_available_bytes_label=0x7f0600b3;
        /**  Error message when the SD card was removed without properly unmounting 
         */
        public static final int sdcard_settings_bad_removal_status=0x7f0600b6;
        /**  Message when the SD card is being used by the computer as mass storage 
         */
        public static final int sdcard_settings_mass_storage_status=0x7f0600b4;
        /**  Message when there is no SD card present 
         */
        public static final int sdcard_settings_not_present_status=0x7f0600b2;
        /**  Message when the SD card is mounted as read only 
         */
        public static final int sdcard_settings_read_only_status=0x7f0600b9;
        /**  Message when it is scanning the SD card for new files 
         */
        public static final int sdcard_settings_scanning_status=0x7f0600b8;
        /**  Enable USB mass storage mode checkbox title 
         */
        public static final int sdcard_settings_screen_mass_storage_text=0x7f0600b0;
        /**  The label for total bytes on SD card 
         */
        public static final int sdcard_settings_total_bytes_label=0x7f0600b1;
        /**  Message when it is safe to remove the SD card 
         */
        public static final int sdcard_settings_unmounted_status=0x7f0600b5;
        /**  Label for used bytes on the SD card 
         */
        public static final int sdcard_settings_used_bytes_label=0x7f0600b7;
        /**  Used for diagnostic info screens, precise translation isn't needed. Unmounts the SD card from the phone, meaning it will become available for an attached computer  
         */
        public static final int sdcard_unmount=0x7f060027;
        /**  Main Settings screen, setting option name to go into search settings 
         */
        public static final int search_settings=0x7f0601b3;
        /**  Main Settings screen, setting option summary to go into search settings 
         */
        public static final int search_settings_summary=0x7f0601b4;
        /**  Label for the security of a wifi network 
         */
        public static final int security=0x7f06012e;
        /**  In the security screen, the header title for settings related to  Passwords
         */
        public static final int security_passwords_title=0x7f0600e9;
        /**  Manage applications, individual application info screen, text that appears under the "Permissions" heading. This describes the permissions that the application has. 
         */
        public static final int security_settings_desc=0x7f0602a8;
        /**  Main Settings screen setting option summary text for the item tot ake you to the security and location screen 
         */
        public static final int security_settings_summary=0x7f0600e7;
        /**  Main Settings screen setting option title for the item to take you the security and location screen 
         */
        public static final int security_settings_title=0x7f0600e5;
        /**  Locale picker screen. Label for choosing the locale 
         */
        public static final int select_your_language=0x7f0600bc;
        /**  Running services, summary of background processes 
         */
        public static final int service_background_processes=0x7f0602b7;
        /**  Running services, description for a service in the started state 
         */
        public static final int service_client_name=0x7f0602b6;
        /**  Running services, summary of foreground processes 
         */
        public static final int service_foreground_processes=0x7f0602b8;
        /**  Text to label a process entry with the process name. 
         */
        public static final int service_process_name=0x7f0602b9;
        /**  Label for a service item when it is restarting 
         */
        public static final int service_restarting=0x7f0602af;
        /**  Running services, description for a service in the started state 
         */
        public static final int service_started_by_app=0x7f0602b5;
        /**  Main Settings screen title 
         */
        public static final int settings_label=0x7f0600c7;
        /**  About phone settings screen, Open source license dialog title until license is fully loaded 
         */
        public static final int settings_license_activity_loading=0x7f060252;
        /**  About phone settings, Legal information setting option name and title of dialog box holding license info 
         */
        public static final int settings_license_activity_title=0x7f060250;
        /**  About phone settings screen, Open source license dialog message when licenses cannot be loaded 
         */
        public static final int settings_license_activity_unavailable=0x7f060251;
        /**  About phone settings screen, Safety Legal dialog title until the link is fully loaded 
         */
        public static final int settings_safetylegal_activity_loading=0x7f060256;
        /**  About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info 
         */
        public static final int settings_safetylegal_activity_title=0x7f060254;
        /**  About phone settings screen, Safety legal dialog message when data network is not connected 
         */
        public static final int settings_safetylegal_activity_unreachable=0x7f060255;
        /**  About phone settings, Safety Legal information setting option name and title of dialog box holding safety legal info 
         */
        public static final int settings_safetylegal_title=0x7f060253;
        /**  Settings section title 
         */
        public static final int settings_section_title=0x7f0603df;
        /**  Label for option to select a settings panel as a shortcut 
         */
        public static final int settings_shortcut=0x7f0600c8;
        /**  On Security & location settings screen, setting check box name. Title of the checkbox to set whether password edit fields will show the most recent character typed and then hide it, or just hide it right away.  By hide, I mean mask it out. 
         */
        public static final int show_password=0x7f0602c8;
        /**  On Security & location settings screen, setting check box summary. Summary for the visible passwords setting. 
         */
        public static final int show_password_summary=0x7f0602c9;
        /**  Label for the signal strength 
         */
        public static final int signal=0x7f060139;
        /**  Sound settings screen, setting option summary text when going into silent mode.  Media WILL NOT be silenced in silent mode, but alarms WILL be silenced. 
         */
        public static final int silent_mode_incl_alarm_summary=0x7f060188;
        /**  Sound settings screen, setting option summary text when going into silent mode.  Media and alarms sounds WILL NOT be silenced in silent mode. 
         */
        public static final int silent_mode_summary=0x7f060187;
        /**  Sound settings screen, setting option name checkbox 
         */
        public static final int silent_mode_title=0x7f060186;
        /**  SIM card lock settings screen, SIM PIN dialog message when wrong PIN is entered 
         */
        public static final int sim_bad_pin=0x7f0601cf;
        /**  SIM card lock settings screen, toast after not entering correct SIM PIN 
         */
        public static final int sim_change_failed=0x7f0601d1;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_change_pin=0x7f0601ce;
        /**  SIM card lock settings screen, SIM PIN dialog message when the entered PIN is correct
         */
        public static final int sim_change_succeeded=0x7f0601d2;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_disable_sim_lock=0x7f0601ca;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_enable_sim_lock=0x7f0601c9;
        /**  SIM card lock settings screen, SIM PIN dialog button labels: 
         */
        public static final int sim_enter_cancel=0x7f0601d5;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_enter_new=0x7f0601cc;
        /**  SIM card lock settings screen, SIM PIN dialog button labels: 
         */
        public static final int sim_enter_ok=0x7f0601d4;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_enter_old=0x7f0601cb;
        /**  SIM card lock settings screen, SIM PIN dialog message instruction 
         */
        public static final int sim_enter_pin=0x7f0601c8;
        /**  SIM card lock settings screen, toast after not entering correct SIM PIN 
         */
        public static final int sim_lock_failed=0x7f0601d3;
        /**  SIM card lock settings screen, setting option summary text when SIM lock check box is clear 
         */
        public static final int sim_lock_off=0x7f0601c6;
        /**  SIM card lock settings screen, setting option summary text when SIM lock check box is selected 
         */
        public static final int sim_lock_on=0x7f0601c5;
        /**  SIM lock settings title 
         */
        public static final int sim_lock_settings=0x7f0601c1;
        /**  Security & location settings screen, setting option name 
         */
        public static final int sim_lock_settings_category=0x7f0601c2;
        /**  Security & location settings screen, section heading for settings related to sim card locking 
         */
        public static final int sim_lock_settings_title=0x7f0601c3;
        /**  SIM card lock settings screen, setting option name to change the SIM PIN 
         */
        public static final int sim_pin_change=0x7f0601c7;
        /**  SIM card lock settings screen, setting check box label 
         */
        public static final int sim_pin_toggle=0x7f0601c4;
        /**  SIM card lock settings screen, SIM PIN dialog message when PINs don't match 
         */
        public static final int sim_pins_dont_match=0x7f0601d0;
        public static final int sim_reenter_new=0x7f0601cd;
        /**  ChooseLockPatternTutorial, button labels: This is to cancel the tutorial 
         */
        public static final int skip_button_label=0x7f060272;
        /**  choice for the font size spinner 
         */
        public static final int small_font=0x7f060029;
        /**  Manage applications screen, menu item.  Sorts all of the apps in the list alphabetically. 
         */
        public static final int sort_order_alpha=0x7f060293;
        /**  Manage applications screen, menu item. Sorts all of the apps in the list based on their file size.  This is used to uninstall when space is getting low. 
         */
        public static final int sort_order_size=0x7f060294;
        /**  Sound and alerts settings 
 Main Settings screen setting option name to go into the sound and display settings screen 
         */
        public static final int sound_and_display_settings=0x7f060182;
        /**  Main Settings screen setting option summary text for the item to go into the soudn and display settings screen
         */
        public static final int sound_and_display_settings_summary=0x7f060185;
        /**  Main Settings screen setting option name to go into the sound and display settings screen 
         */
        public static final int sound_and_display_settings_title=0x7f060183;
        /**  Sound settings screen, setting option summary text when check box is clear 
         */
        public static final int sound_effects_enable_summary_off=0x7f06019f;
        /**  Sound settings screen, setting option summary text when check box is selected 
         */
        public static final int sound_effects_enable_summary_on=0x7f06019e;
        /**  Sound settings screen, setting check box label 
         */
        public static final int sound_effects_enable_title=0x7f06019d;
        /**  Sound settings screen heading 
         */
        public static final int sound_settings=0x7f060184;
        /**  Status message of Wi-Fi when it is authenticating (but the network is not known right now) 
         */
        public static final int status_authenticating=0x7f06017c;
        /**  About phone, status item title.  How much time the device has had its main CPU awake. 
         */
        public static final int status_awake_time=0x7f0601f5;
        /**  About phone, status item title.  The bluetooth adapter's hardware address
         */
        public static final int status_bt_address=0x7f0601f2;
        /** Wi-Fi settings screen, summary text for network when connected 
         */
        public static final int status_connected=0x7f06017e;
        /**  Status message of Wi-Fi when it is connecting (but the network is not known right now) 
         */
        public static final int status_connecting=0x7f06017b;
        /**  About phone, status item title. The status of data access.  For example, the value may be "Connected" 
         */
        public static final int status_data_state=0x7f0601ec;
        /**  Status message of Wi-Fi when it is disconnected (but the network is not known right now) 
         */
        public static final int status_disconnected=0x7f060180;
        /**  Status message of Wi-Fi when it is disconnecting (but the network is not known right now) 
         */
        public static final int status_disconnecting=0x7f06017f;
        /**  Status message of Wi-Fi when it is a failure (but the network is not known right now) 
         */
        public static final int status_failed=0x7f060181;
        /**  Do not translate. About phone, status item title 
         */
        public static final int status_imei=0x7f0601e5;
        /**  Do not translate. About phone, status item title 
         */
        public static final int status_imei_sv=0x7f0601e6;
        /**  About phone, status item title.  The phone MEID number of the current device.
         */
        public static final int status_meid_number=0x7f0601ea;
        /**  About phone, status item title.  The phone MIN number of the current device.
         */
        public static final int status_min_number=0x7f0601e8;
        /**  About phone, status item title for the type of data phone network we're connected to, for example 3G or Edge or GPRS 
         */
        public static final int status_network_type=0x7f0601eb;
        /**  About phone, status item title.  The phone number of the current device.
         */
        public static final int status_number=0x7f0601e7;
        /** Wi-Fi settings screen, summary text for network when connecting 
         */
        public static final int status_obtaining_ip=0x7f06017d;
        /**  About phone, status item title. The cell carrier that the user is connected to.  
         */
        public static final int status_operator=0x7f0601f0;
        /**  About phone, status item title.  The phone PRL Version of the current device.
         */
        public static final int status_prl_version=0x7f0601e9;
        /**  About phone, status item title, The status for roaming.  For example, the value might be "Not roaming" 
         */
        public static final int status_roaming=0x7f0601ef;
        /**  Status message of Wi-Fi when it is scanning 
         */
        public static final int status_scanning=0x7f06017a;
        /**  About phone, status item title. The status of whether we have service.  for example, the value may be "In service" 
         */
        public static final int status_service_state=0x7f0601ed;
        /**  About phone, status item title. The  current cell tower signal strength 
         */
        public static final int status_signal_strength=0x7f0601ee;
        /**  About phone, status item value if the actual value is not available. 
         */
        public static final int status_unavailable=0x7f0601f3;
        /**  About phone, status item title.  How long the device has been running since its last reboot. 
         */
        public static final int status_up_time=0x7f0601f4;
        /**  About phone, status item title.  The MAC address of the Wi-Fi network adapter. 
         */
        public static final int status_wifi_mac_address=0x7f0601f1;
        /**  Manage applications, individual application info screen, section heading for stuff relating to an app's storage settings. 
         */
        public static final int storage_label=0x7f060281;
        /**  Main settings screen item's title to go into the SD card and storage settings screen
         */
        public static final int storage_settings=0x7f0601e2;
        /**  Main settings screen item's summary for the SD card and storage settings 
         */
        public static final int storage_settings_summary=0x7f0601e4;
        /**  SD card and storage settings screen title 
         */
        public static final int storage_settings_title=0x7f0601e3;
        /**  mobile network settings screen, setting option summary text 
         */
        public static final int sum_carrier_select=0x7f0600d8;
        /**  Wifi network summary when there was an error connecting 
         */
        public static final int summary_connection_failed=0x7f060150;
        /**  Wifi network summary when not in nearby. 
         */
        public static final int summary_not_in_range=0x7f06014e;
        /**  Wifi network summary when the network is configured previously, capitalized by app 
         */
        public static final int summary_remembered=0x7f06014f;
        /**  Acounts & Sync settings screen setting option name to go into the screen for data sync settings
         */
        public static final int sync_settings=0x7f0601b1;
        /**  Main Settings screen setting option summary text for the itme to go into the screen with data sync settings
         */
        public static final int sync_settings_summary=0x7f0601b2;
        /**  About phone settings screen, summary of what System Tutorial does 
         */
        public static final int system_tutorial_list_item_summary=0x7f06024f;
        /**  About phone settings screen, running the System Tutorial 
         */
        public static final int system_tutorial_list_item_title=0x7f06024e;
        /**  About phone screen, list item summary.  Takes the user to the screen for seeing and installing system updates. 
         */
        public static final int system_update_settings_list_item_summary=0x7f0601d8;
        /**  About phone screen, list item title.  Takes the user to the screen for seeing and installing system updates. 
         */
        public static final int system_update_settings_list_item_title=0x7f0601d7;
        /**  About phone settings screen, setting option name to see terms and conditions 
         */
        public static final int terms_title=0x7f06024d;
        /**  This is for diagnostics screen. The title of a screen with various items realted to launching screens that will giev the user info. For example, it contains "Phone information" and "Battery information" 
         */
        public static final int testing=0x7f0602d4;
        /**  In the Testing screen. The item title of the activity that shows a bunch of historical battery-related information.  
         */
        public static final int testing_battery_history=0x7f0602d7;
        /**  In the Testing screen. The item title of the activity that shows a bunch of battery-related information.  
         */
        public static final int testing_battery_info=0x7f0602d6;
        /**  In the Testing screen.  The item title of the activity that shows a bunch of phone-related information.  
         */
        public static final int testing_phone_info=0x7f0602d5;
        /**  Do not translate. In the Testing screen. The item title of the activity that shows a bunch of SIM-related operations.  
         */
        public static final int testing_sim_toolkit=0x7f0602d8;
        /**  In the Testing screen. The item title of the activity that shows usage statistics.  
         */
        public static final int testing_usage_stats=0x7f060315;
        /**  On Text & language settings screen, heading. Inside the "Locale & text" screen, this is the header for settings that relate to text (autotext, autoreplace, autocapitalization). 
         */
        public static final int text_category=0x7f0602be;
        /**  Setting Checkbox title for enabling accessibility 
         */
        public static final int toggle_accessibility_title=0x7f06031d;
        /**  Manage applications, individual application info screen,label under Storage heading.  The total storage space taken up by this app. 
         */
        public static final int total_size_label=0x7f060289;
        /**  On main TTS Settings screen, summary for when required speech synthesis data alrady installed on SD card 
         */
        public static final int tts_data_installed_summary=0x7f06036b;
        /**  On main TTS Settings screen, summary for default language for synthesized voice 
         */
        public static final int tts_default_lang_summary=0x7f060366;
        /**  On main TTS Settings screen, in default settings section, setting default language for synthesized voice 
         */
        public static final int tts_default_lang_title=0x7f060365;
        /**  On main TTS Settings screen, summary for default pitch for synthesized voice 
         */
        public static final int tts_default_pitch_summary=0x7f060364;
        /**  On main TTS Settings screen, in default settings section, setting default pitch for synthesized voice 
         */
        public static final int tts_default_pitch_title=0x7f060363;
        /**  On main TTS Settings screen, summary for default speech rate for synthesized voice 
         */
        public static final int tts_default_rate_summary=0x7f060362;
        /**  On main TTS Settings screen, in default settings section, setting default speech rate for synthesized voice 
         */
        public static final int tts_default_rate_title=0x7f060361;
        /**  On main TTS Settings screen, section header for default TTS settings 
         */
        public static final int tts_default_settings_section=0x7f060360;
        /**  Text spoken by the TTS engine for demonstration purposes 
         */
        public static final int tts_demo=0x7f06036c;
        /**  On main TTS Settings screen, summary for click to install required speech synthesis data 
         */
        public static final int tts_install_data_summary=0x7f06036a;
        /**  On main TTS Settings screen, click to install required speech synthesis data 
         */
        public static final int tts_install_data_title=0x7f060369;
        /**  On main TTS Settings screen, summary for triggering playback of an example of speech synthesis 
         */
        public static final int tts_play_example_summary=0x7f060368;
        /**  On main TTS Settings screen, triggers playback of an example of speech synthesis 
         */
        public static final int tts_play_example_title=0x7f060367;
        /**  Title of setting on main settings screen.  This item will take the user to the screen to tweak settings related to the text-to-speech functionality 
         */
        public static final int tts_settings=0x7f06035b;
        /**  Text spoken by the TTS engine when TTS settings (other than language) have been changed 
         */
        public static final int tts_settings_changed_demo=0x7f06036d;
        /**  Summary of setting on main settings screen. This item will take the user to the screen to tweak settings related to the text-to-speech functionality  
         */
        public static final int tts_settings_summary=0x7f06035c;
        /**  Main TTS Settings screen title 
         */
        public static final int tts_settings_title=0x7f06035d;
        /**  Phone Info screen. Button label to turn off the log for QXDM SD . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_off_qxdm=0x7f06000a;
        /**  Phone Info screen. Button label to turn off the radio . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_off_radio=0x7f060008;
        /**  Phone Info screen. Button label to turn on the log for QXDM SD . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_on_qxdm=0x7f060009;
        /**  Phone info 
 Phone Info screen. Button label to turn on the radio . Only shown in diagnostic screen, so precise translation is not needed. 
         */
        public static final int turn_on_radio=0x7f060007;
        /**  Manage applications, individual application info screen, button label under Storage heading. Button to remove the application from the system. 
         */
        public static final int uninstall_text=0x7f06028c;
        /**  Manage apps, individual app screen, substituted for the application's label when the app's label CAN NOT be determined.
         */
        public static final int unknown=0x7f060292;
        /**  Name to assign to a Network Access Point that was saved without a name 
         */
        public static final int untitled_apn=0x7f0603e4;
        /**  Application name and battery usage percentage 
         */
        public static final int usage_name_percent=0x7f06032b;
        /**  XXX remove? Strings used for displaying usage statistics 
         */
        public static final int usage_stats_label=0x7f060314;
        /**  label for usage time 
         */
        public static final int usage_time_label=0x7f060319;
        /**  Label for Audio usage time 
         */
        public static final int usage_type_audio=0x7f06033c;
        /**  Label for CPU usage time 
         */
        public static final int usage_type_cpu=0x7f060336;
        /**  Label for CPU usage in foreground 
         */
        public static final int usage_type_cpu_foreground=0x7f060337;
        /**  Label for Data received 
         */
        public static final int usage_type_data_recv=0x7f06033b;
        /**  Label for Data sent 
         */
        public static final int usage_type_data_send=0x7f06033a;
        /**  Label for GPU usage time 
         */
        public static final int usage_type_gps=0x7f060338;
        /**  Label for time that there was no cell coverage 
         */
        public static final int usage_type_no_coverage=0x7f06033f;
        /**  Label for time that a feature has been on 
         */
        public static final int usage_type_on_time=0x7f06033e;
        /**  Label for Phone usage time 
         */
        public static final int usage_type_phone=0x7f060339;
        /**  Label for Video usage time 
         */
        public static final int usage_type_video=0x7f06033d;
        /**  On main TTS Settings screen, summary for toggle used to force use of default TTS settings 
         */
        public static final int use_default_tts_settings_summary=0x7f06035f;
        /**  On main TTS Settings screen, title for toggle used to force use of default TTS settings 
         */
        public static final int use_default_tts_settings_title=0x7f06035e;
        /**  Setting summary for allowing Google to use location information for improved search results. 
         */
        public static final int use_location_summary=0x7f060243;
        /**  Setting title for allow sending location to google 
         */
        public static final int use_location_title=0x7f060242;
        /**  Message of dialog to user requesting use of location information 
         */
        public static final int use_location_warning_message=0x7f060244;
        /**  User dictionary settings. The title of the dialog to add a new word to the user dictionary. 
         */
        public static final int user_dict_settings_add_dialog_title=0x7f0602cf;
        /**  User dictionary settings. The title of the menu item to add a new word to the user dictionary. 
         */
        public static final int user_dict_settings_add_menu_title=0x7f0602ce;
        /**  User dictionary settings. The title of the context menu item to delete the current word 
         */
        public static final int user_dict_settings_context_menu_delete_title=0x7f0602d2;
        /**  User dictionary settings. The title of the context menu item to edit the current word 
         */
        public static final int user_dict_settings_context_menu_edit_title=0x7f0602d1;
        /**  User dictionary settings. The title of the dialog to edit an existing word in the user dictionary. 
         */
        public static final int user_dict_settings_edit_dialog_title=0x7f0602d0;
        /**  User dictionary settings. The text to show when there are no user-defined words in the dictionary 
         */
        public static final int user_dict_settings_empty_text=0x7f0602d3;
        /**  User dictionary settings.  The summary of the listem item to go into the User dictionary settings screen. 
         */
        public static final int user_dict_settings_summary=0x7f0602cd;
        /**  User dictionary settings, The title of the list item to go into the User dictionary settings screen. 
         */
        public static final int user_dict_settings_title=0x7f0602cc;
        /**  User dictionary settings, The titlebar text of the User dictionary settings screen. 
         */
        public static final int user_dict_settings_titlebar=0x7f0602cb;
        /**  Manage applications, version string displayed in app snippet 
         */
        public static final int version_text=0x7f0602ac;
        /**  Sound settings screen, setting option summary text 
         */
        public static final int vibrate_summary=0x7f06018e;
        /**  Sound settings screen, setting option name checkbox 
         */
        public static final int vibrate_title=0x7f06018d;
        public static final int vpn_a_ca_certificate=0x7f0603a6;
        public static final int vpn_a_ipsec_presharedkey=0x7f0603ae;
        public static final int vpn_a_l2tp_secret=0x7f0603a9;
        public static final int vpn_a_name=0x7f06039e;
        public static final int vpn_a_password=0x7f060377;
        public static final int vpn_a_user_certificate=0x7f0603a3;
        public static final int vpn_a_username=0x7f060376;
        public static final int vpn_a_vpn_server=0x7f0603b1;
        /**  "Add VPN" preference title 
         */
        public static final int vpn_add_new_vpn=0x7f060395;
        public static final int vpn_auth_error_dialog_msg=0x7f060390;
        public static final int vpn_back_button=0x7f06037c;
        /**  Complete term 
         */
        public static final int vpn_ca_certificate=0x7f0603a5;
        /**  Preference title 
         */
        public static final int vpn_ca_certificate_title=0x7f0603a4;
        public static final int vpn_challenge_error_dialog_msg=0x7f06038e;
        public static final int vpn_confirm_add_profile_cancellation=0x7f060389;
        public static final int vpn_confirm_edit_profile_cancellation=0x7f06038a;
        public static final int vpn_confirm_profile_deletion=0x7f060388;
        public static final int vpn_confirm_reconnect=0x7f06038b;
        public static final int vpn_connect_button=0x7f060379;
        /**  Preference summary text when VPN is not connected 
         */
        public static final int vpn_connect_hint=0x7f06039c;
        /**  Title of VPN connect dialog 
         */
        public static final int vpn_connect_to=0x7f060373;
        /**  Preference summary text when VPN is connected 
         */
        public static final int vpn_connected=0x7f06039b;
        /**  Preference summary text when VPN is connecting 
         */
        public static final int vpn_connecting=0x7f060399;
        /**  CheckBoxPreference title to disable something 
         */
        public static final int vpn_disable_field=0x7f0603b9;
        /**  Preference summary text when VPN is disconnecting 
         */
        public static final int vpn_disconnecting=0x7f06039a;
        /**  Complete term 
         */
        public static final int vpn_dns_search_list=0x7f0603b4;
        /**  Preference title 
         */
        public static final int vpn_dns_search_list_title=0x7f0603b3;
        /**  VPN profile editor title when adding a new profile 
         */
        public static final int vpn_edit_title_add=0x7f060396;
        /**  VPN profile editor title when editing an existing profile 
         */
        public static final int vpn_edit_title_edit=0x7f060397;
        /**  CheckBoxPreference title to enable something 
         */
        public static final int vpn_enable_field=0x7f0603b8;
        public static final int vpn_error_duplicate_name=0x7f060387;
        /**  VPN error dialog messages 
         */
        public static final int vpn_error_miss_entering=0x7f060385;
        public static final int vpn_error_miss_selecting=0x7f060386;
        /**  Summary text to hint that the value is set 
         */
        public static final int vpn_field_is_set=0x7f0603b5;
        /**  Summary text to hint that the value is not set 
         */
        public static final int vpn_field_not_set=0x7f0603b6;
        /**  Summary text to hint that the value is not set but it's not required
         */
        public static final int vpn_field_not_set_optional=0x7f0603b7;
        /**  Complete term 
         */
        public static final int vpn_ipsec_presharedkey=0x7f0603ad;
        /**  Preference title 
         */
        public static final int vpn_ipsec_presharedkey_title=0x7f0603ac;
        /**  CheckBoxPreference summary to hint that something is disabled 
         */
        public static final int vpn_is_disabled=0x7f0603bb;
        /**  CheckBoxPreference summary to hint that something is enabled 
         */
        public static final int vpn_is_enabled=0x7f0603ba;
        /**  Complete term 
         */
        public static final int vpn_l2tp_secret=0x7f0603a8;
        /**  Preference title 
         */
        public static final int vpn_l2tp_secret_string_title=0x7f0603a7;
        public static final int vpn_menu_cancel=0x7f06037f;
        public static final int vpn_menu_connect=0x7f060381;
        public static final int vpn_menu_delete=0x7f060384;
        public static final int vpn_menu_disconnect=0x7f060382;
        public static final int vpn_menu_done=0x7f06037e;
        public static final int vpn_menu_edit=0x7f060383;
        public static final int vpn_menu_revert=0x7f060380;
        public static final int vpn_mistake_button=0x7f06037d;
        /**  Name of a VPN profile 
         */
        public static final int vpn_name=0x7f06039d;
        public static final int vpn_no_button=0x7f06037b;
        public static final int vpn_password_colon=0x7f060375;
        public static final int vpn_ppp_negotiation_failed_dialog_msg=0x7f060393;
        public static final int vpn_pptp_encryption=0x7f0603ab;
        public static final int vpn_pptp_encryption_title=0x7f0603aa;
        /**  Toast message shown when a profile is added 
         */
        public static final int vpn_profile_added=0x7f06039f;
        /**  Toast message shown when changes of a profile is saved 
         */
        public static final int vpn_profile_replaced=0x7f0603a0;
        public static final int vpn_reconnect_from_lost=0x7f06038c;
        public static final int vpn_remote_hung_up_error_dialog_msg=0x7f060391;
        public static final int vpn_remote_ppp_hung_up_error_dialog_msg=0x7f060392;
        /**  In VPN connect dialog where user may check to remember the username entered 
         */
        public static final int vpn_save_username=0x7f060378;
        /**  A secret edit field's grayed out value when it has not been set 
         */
        public static final int vpn_secret_not_set=0x7f0603bf;
        public static final int vpn_secret_not_set_dialog_msg=0x7f06038f;
        /**  A secret edit field's grayed out value when it has not been modified 
         */
        public static final int vpn_secret_unchanged=0x7f0603be;
        public static final int vpn_settings_activity_title=0x7f060372;
        /**  Summary of preference to enter the VPN settings activity 
         */
        public static final int vpn_settings_summary=0x7f0603bd;
        /**  Title of preference to enter the VPN settings activity 
         */
        public static final int vpn_settings_title=0x7f0603bc;
        /**  VPN type selection activity title 
         */
        public static final int vpn_type_title=0x7f060394;
        public static final int vpn_unknown_server_dialog_msg=0x7f06038d;
        /**  Complete term 
         */
        public static final int vpn_user_certificate=0x7f0603a2;
        /**  Preference title 
         */
        public static final int vpn_user_certificate_title=0x7f0603a1;
        /**  In VPN connect dialog, for inputing username and password 
         */
        public static final int vpn_username_colon=0x7f060374;
        /**  Complete term 
         */
        public static final int vpn_vpn_server=0x7f0603b0;
        /**  Dialog title for setting VPN server name 
         */
        public static final int vpn_vpn_server_dialog_title=0x7f0603b2;
        /**  Preference title 
         */
        public static final int vpn_vpn_server_title=0x7f0603af;
        public static final int vpn_yes_button=0x7f06037a;
        /**  Preference group title for a list of VPN profiles 
         */
        public static final int vpns=0x7f060398;
        public static final int waitContent=0x7f060003;
        public static final int waitTitle=0x7f060002;
        /**  Title for the screen that lets the user choose a widget to add to the home screen
         (or other screens that can host widgets).  Note to translators: we're still determining
         the final name for Gadgets/Widgets, so please translate both for now. 
         */
        public static final int widget_picker_title=0x7f0602f5;
        /**  Wi-Fi settings 
 Used in the 2nd-level settings screen to turn on Wi-Fi 
         */
        public static final int wifi=0x7f060121;
        /**  Header for the list of wifi networks
         */
        public static final int wifi_access_points=0x7f060151;
        /**  Action message to add a wifi network 
         */
        public static final int wifi_add_other_network=0x7f060156;
        /**  Wi-Fi settings screen, advanced, title of the item to show the Wi-Fi device's MAC address. 
         */
        public static final int wifi_advanced_mac_address_title=0x7f060171;
        /**  Wi-Fi settings screen, advanced, settings section.  This is a header shown above advanced wifi settings. 
         */
        public static final int wifi_advanced_titlebar=0x7f060169;
        /** Wi-Fi settings screen, network context menu item 
         */
        public static final int wifi_context_menu_change_password=0x7f060168;
        /** Wi-Fi settings screen, network context menu item 
         */
        public static final int wifi_context_menu_connect=0x7f060166;
        /** Wi-Fi settings screen, network context menu item 
         */
        public static final int wifi_context_menu_forget=0x7f060167;
        /**  Label for the DNS (first one) 
         */
        public static final int wifi_dns1=0x7f060162;
        /**  Label for the DNS (second one)
         */
        public static final int wifi_dns2=0x7f060163;
        /**  Generic error message , probably not used
         */
        public static final int wifi_error=0x7f06013c;
        /**  Label for the gateway of the network 
         */
        public static final int wifi_gateway=0x7f060164;
        /**  Generic error message 
         */
        public static final int wifi_generic_connection_error=0x7f06015a;
        /**  Label for the IP address 
         */
        public static final int wifi_ip_address=0x7f060161;
        /**  Error message if the IP address is not valid 
         */
        public static final int wifi_ip_settings_invalid_ip=0x7f06015f;
        /**  Menu ietm to cancel the IP settings 
         */
        public static final int wifi_ip_settings_menu_cancel=0x7f06015e;
        /**  Menu ietm to save the IP settings 
         */
        public static final int wifi_ip_settings_menu_save=0x7f06015d;
        /**  Title of the screen to adjust IP settings 
         */
        public static final int wifi_ip_settings_titlebar=0x7f06015c;
        /**  Label for link speed (wifi) 
         */
        public static final int wifi_link_speed=0x7f060129;
        /** Wi-Fi settings screen menu option 
         */
        public static final int wifi_menu_advanced=0x7f06015b;
        /**  Label for the netmask of the network 
         */
        public static final int wifi_netmask=0x7f060165;
        /**  Checkbox title for option to notify user when open networks are nearby 
         */
        public static final int wifi_notify_open_networks=0x7f060157;
        /**  Checkbox summary for option to notify user when open networks are nearby 
         */
        public static final int wifi_notify_open_networks_summary=0x7f060158;
        /**  Wifi on time 
         */
        public static final int wifi_on_time=0x7f060329;
        /**  This dialog will use the error_title as the title. 
         */
        public static final int wifi_password_incorrect_error=0x7f060159;
        /**  An edit field's grayed out value when it has not been modified 
         */
        public static final int wifi_password_unchanged=0x7f060155;
        /**  Used in the 1st-level settings screen as the turn-on summary 
         */
        public static final int wifi_quick_toggle_summary=0x7f060123;
        /**  Used in the 1st-level settings screen to turn on Wi-Fi 
         */
        public static final int wifi_quick_toggle_title=0x7f060122;
        /**  Button caption to save a configuration wifi 
         */
        public static final int wifi_save_config=0x7f060154;
        /**  The label for security 
         */
        public static final int wifi_security=0x7f060153;
        /**  Value for the wifi security 
         */
        public static final int wifi_security_eap=0x7f060132;
        /**  Value for the wifi security.  This means no encryption. 
         */
        public static final int wifi_security_open=0x7f06012f;
        /**  Value for the wifi security 
         */
        public static final int wifi_security_psk=0x7f060131;
        /**  Value for the wifi security 
 Value for the wifi security when it is unknown 
         */
        public static final int wifi_security_unknown=0x7f060133;
        /**  Verbose security type of a wifi network.  Capitalized by app. 
         */
        public static final int wifi_security_verbose_eap=0x7f060137;
        /**  Verbose security type of a wifi network.  Open means no security. Capitalized by app. 
         */
        public static final int wifi_security_verbose_open=0x7f060134;
        /**  Verbose security type of a wifi network.  Capitalized by app. 
         */
        public static final int wifi_security_verbose_psk=0x7f060136;
        /**  Verbose security type of a wifi network.  Capitalized by app. 
         */
        public static final int wifi_security_verbose_wep=0x7f060135;
        /**  Value for the wifi security 
         */
        public static final int wifi_security_wep=0x7f060130;
        /**  Wi-Fi settings screen, label to be appended to the count in displaying the list of valid channel counts 
         */
        public static final int wifi_setting_num_channels_channel_phrase=0x7f06016d;
        /**  Wi-Fi settings screen, generic error message when the regulatory domain could not be set. 
         */
        public static final int wifi_setting_num_channels_error=0x7f06016c;
        /**  Wi-Fi settings screen, setting summary for choosing the number of channels to be used 
         */
        public static final int wifi_setting_num_channels_summary=0x7f06016b;
        /**  Wi-Fi settings screen, setting title for choosing the number of channels to be used 
         */
        public static final int wifi_setting_num_channels_title=0x7f06016a;
        /**  Wi-Fi settings screen, generic error message when the sleep policy could not be set. 
         */
        public static final int wifi_setting_sleep_policy_error=0x7f060170;
        /**  Wi-Fi settings screen, setting summary for setting the wifi sleep policy 
         */
        public static final int wifi_setting_sleep_policy_summary=0x7f06016f;
        /**  Wi-Fi settings screen, setting title for setting the wifi sleep policy 
         */
        public static final int wifi_setting_sleep_policy_title=0x7f06016e;
        /**  Used in the 1st-level settings screen to go to the 2nd-level settings screen 
         */
        public static final int wifi_settings=0x7f060124;
        /**  Title of the Wi-fi settings screen 
         */
        public static final int wifi_settings_category=0x7f060125;
        /** Wireless controls setting screen, Wi-Fi settings summary text 
         */
        public static final int wifi_settings_summary=0x7f060126;
        /** Wi-Fi settings screen, connect to network dialog box, check box label 
         */
        public static final int wifi_show_password=0x7f06014c;
        /**  Verbose wifi signal strength.  This is the worst out of 4 levels. 
         */
        public static final int wifi_signal_0=0x7f06012d;
        /**  Verbose wifi signal strength.  This is the 3rd best out of 4 levels. 
         */
        public static final int wifi_signal_1=0x7f06012c;
        /**  Verbose wifi signal strength.  This is the 2nd best out of 4 levels. 
         */
        public static final int wifi_signal_2=0x7f06012b;
        /**  Verbose wifi signal strength.  This is the best out of 4 levels. 
         */
        public static final int wifi_signal_3=0x7f06012a;
        /** Wireless controls setting screen, Wi-Fi check box summary text when turning Wi-Fi on 
         */
        public static final int wifi_starting=0x7f06013a;
        /**  Label for status of connection 
         */
        public static final int wifi_status=0x7f060128;
        /** Wireless controls setting screen, Wi-Fi check box summary text when turning Wi-Fi off 
         */
        public static final int wifi_stopping=0x7f06013b;
        /**  Caption for entering the SSID of a wifi network 
         */
        public static final int wifi_type_ssid=0x7f060152;
        /**  Checkbox for whether to use a static IP address 
         */
        public static final int wifi_use_static_ip=0x7f060160;
        /**  Wireless Settings screen title for things like Wi-Fi, bluetooth, airplane mode. 
         */
        public static final int wireless_networks_settings_title=0x7f0600ce;
        /**  Strings for Dialog yes button 
         */
        public static final int yes=0x7f060004;
        /**  Menu item on Select time zone screen 
         */
        public static final int zone_list_menu_sort_alphabetically=0x7f0600e3;
        /**  Menu item on Select time zone screen 
         */
        public static final int zone_list_menu_sort_by_timezone=0x7f0600e4;
    }
    public static final class xml {
        public static final int wifi_access_points=0x7f040000;
        public static final int wifi_settings=0x7f040001;
    }
    public static final class styleable {
        /** Attributes that can be used with a IconPreferenceScreen.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #IconPreferenceScreen_icon com.camangi.netconnect:icon}</code></td><td></td></tr>
           </table>
           @see #IconPreferenceScreen_icon
         */
        public static final int[] IconPreferenceScreen = {
            0x7f010001
        };
        /**
          <p>This symbol is the offset where the {@link com.camangi.netconnect.R.attr#icon}
          attribute's value can be found in the {@link #IconPreferenceScreen} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:icon
        */
        public static final int IconPreferenceScreen_icon = 0;
        /** Attributes that can be used with a WifiEncryptionState.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #WifiEncryptionState_state_encrypted com.camangi.netconnect:state_encrypted}</code></td><td></td></tr>
           </table>
           @see #WifiEncryptionState_state_encrypted
         */
        public static final int[] WifiEncryptionState = {
            0x7f010000
        };
        /**
          <p>This symbol is the offset where the {@link com.camangi.netconnect.R.attr#state_encrypted}
          attribute's value can be found in the {@link #WifiEncryptionState} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:state_encrypted
        */
        public static final int WifiEncryptionState_state_encrypted = 0;
    };
}
